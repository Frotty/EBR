package HomingProjectile
import public Entity
import Projectile


public enum HOMING
	none // wut
	attract // Direct homing
	angular // Chaning angle
	forced // pushed homing (warlock-like)
	circle // Circular motion around the target with set distance

public abstract class HomingProjectile extends Projectile
	HOMING htype = HOMING.none
	Entity target
	real homingSpeed = 0.
	real radii

	
	construct(vec3 pos, real radius, player owner, angle xyAngle, string fxpath)
		super(pos, radius, owner, xyAngle, fxpath)
		
	function setTarget(Entity e, HOMING htype, real homingspeed)
		target = e
		this.htype = htype
		homingSpeed = homingspeed
		radii = radius*radius + e.radius*e.radius
				
	override function update()
		let dist = pos.distToVecSquared(target.pos)
		let anglexy = angleBetweenCoords(pos.x, pos.y, target.pos.x, target.pos.y)
		if dist < radii
			terminate()
			return
			
			
		switch htype
			case HOMING.none
				skip
			case HOMING.attract
				vel = (target.pos - this.pos).setLength(homingSpeed)
			case HOMING.circle
				skip			
			case HOMING.angular
				var df1 = (anglexy - xyAngle).radians()
				var df2 = (PI2 + anglexy.radians()) - xyAngle.radians()
				var ns = homingSpeed
		
				if df1 <= 0
					if df2 <= 0 
						if df2 >= df1 
							df1 = df2
					else
						if -df1 >= df2
							df1 = df2
				else
					if df2 <= 0 
						if -df2 <= df1
							df1 = df2
					else
						if df2 <= df1 
							df1 = df2
				if df1 <= 0 
					if -df1 >= ns 
						ns = -ns
					else
						ns = df1
				else
					if df1 <= ns 
						ns = df1
				var d = xyAngle.radians()
				d += ns
				if d >= PI2
					d -= PI2
				else if d < 0
					d += PI2
		
				

				vel = vec3( getSpeed() * xyAngle.cos(), getSpeed() * xyAngle.sin(), 0. )
				
			case HOMING.forced
				vec3 tmp = vec3(polarProjectionX(pos.x, getSpeed(), anglexy), polarProjectionY(pos.y, getSpeed(), anglexy), 0.)
				
				tmp -= pos
				
				vel += tmp
				
				pos += vel
				
				fx.setPos(pos)
				
				vel -= (vel*homingSpeed)
		setXYAngle(anglexy)
		super.update()