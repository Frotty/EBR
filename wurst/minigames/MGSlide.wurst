package MGSlide
import Minigame
import Fx
import PlayerData

constant LEFT_SPOT = vec2(-1540, 7550)
constant RIGHT_SPOT = vec2(640, 7550)

public class MGSlide extends Minigame
	Fx fx
	RegionData rdata
	boolean goRight = true

	override function getGameRect() returns rect
		return gg_rct_slidegamearea

	override function getCamBounds() returns rect
		return gg_rct_slidegamebounds

	override function onBegin()
		rdata = getRegionData(RIGHT_SPOT)
		doPeriodically(10) cb ->
			int count = 0
			for pd in escaperPlayers
				if goRight and pd.escaper.getPos().distanceTo2d(RIGHT_SPOT) > 64
					Log.warn("kill")
					pd.escaper.kill(null)
				else if not goRight and pd.escaper.getPos().distanceTo2d(LEFT_SPOT) > 64
					pd.escaper.kill(null)
					Log.warn("kill")
				else
					count++

			if count == 0
				destroy cb
			else
				goRight = not goRight
				for pd in escaperPlayers
					printTimedToPlayer("Next round!\nGet to the other side!", 1, pd.p)


	override function onEnd()
		if fx != null
			GroupEnumUnitsInRect(ENUM_GROUP, getGameRect(), Filter(() -> GetFilterUnit().getOwner() == STAFF_PLAYER))
			for obj from ENUM_GROUP
				Log.debug("onEnd Terminate")
				if obj.getEntity() != null
					obj.getEntity().terminate()
			destroy fx
			fx = null

	override function getStartPosition() returns vec2
		return LEFT_SPOT

	override function getName() returns string
		return "|cff567eecSlide Fun\n\n|cff8cbfd8a55Get to the other side in 15 seconds!"

init
	minigames.add(new MGSlide())
