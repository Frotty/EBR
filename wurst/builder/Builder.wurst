package Builder
import Entity
import TimerUtils
import BuilderConstants
import RegionData
import Key
import initlater InstantBuild
import Tome
import JukeBox

trigger swapTrigger
trigger itemTrigger
trigger orderTrigger

JukeBox jukeBox = new JukeBox()

public class Builder extends UnitEntity
	int regionCount = 0
	boolean hasBossMenu = false

	construct( player p )
		super( vec3(0,0,0), CreateUnit(p, BUILDER_1, -6500, -7000, 0) )
		EventListener.add(actor, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER, () -> onOrder())
		EventListener.add(actor, EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER, () -> onOrder())
		EventListener.add(actor, EVENT_PLAYER_UNIT_SPELL_CAST, () -> onCast())

	override function update()
		pos = actor.getPos().toVec3()
	
	override function setNewActor(unit u)
		super.setNewActor(u)
		EventListener.add(actor, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER, () -> onOrder())
		EventListener.add(actor, EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER, () -> onOrder())
		EventListener.add(actor, EVENT_PLAYER_UNIT_SPELL_CAST, () -> onCast())
		if UnitItemInSlot(actor, 0) == null
			UnitAddItemById(actor,'I001')
			UnitAddItemById(actor,'I002')
			UnitAddItemById(actor,'I003')				
			SelectUnitForPlayerSingle( actor, owner )

	function onCast()
		var id = GetSpellAbilityId()
		let tpos = getSpellTargetPos()
		let rdata = getRegionData(tpos)
		if rdata == null
			return
		switch id
			case MENU_1
				setNewActor( CreateUnit( GetOwningPlayer( GetTriggerUnit() ), BUILDER_1, pos.x, pos.y, GetUnitFacing(GetTriggerUnit() )) )
			case MENU_2
				setNewActor( CreateUnit( GetOwningPlayer( GetTriggerUnit() ), BUILDER_2, pos.x, pos.y, GetUnitFacing(GetTriggerUnit())))
			case MENU_3
				setNewActor( CreateUnit( GetOwningPlayer( GetTriggerUnit() ), BUILDER_3, pos.x, pos.y, GetUnitFacing(GetTriggerUnit()) ) )
			case MENU_4
				setNewActor( CreateUnit( GetOwningPlayer( GetTriggerUnit() ), BUILDER_4, pos.x, pos.y, GetUnitFacing(GetTriggerUnit()) ) )
			case MENU_5
				setNewActor( CreateUnit( GetOwningPlayer( GetTriggerUnit() ), BUILDER_2, pos.x, pos.y, GetUnitFacing(GetTriggerUnit() )) )
			case MENU_6
				setNewActor( CreateUnit( GetOwningPlayer( GetTriggerUnit() ), BUILDER_3, pos.x, pos.y, GetUnitFacing(GetTriggerUnit() )) )
			case KEY_SPELL_ID
				if rdata.canBuild(owner)
					new Key(tpos, owner)
				else
					DisplayTextToPlayer( owner, 0, 0, "|cffC51019You have no permission to place items in this region!") 
			case BOOTS_SPELL_ID
				if rdata.canBuild(owner)
					createItem(BOOTS_ID, tpos)
				else
					DisplayTextToPlayer( owner, 0, 0, "|cffC51019You have no permission to place items in this region!") 
			case TOME_SPELL_ID
				if rdata.canBuild(owner)
					new Tome(tpos, owner)
				else
					DisplayTextToPlayer( owner, 0, 0, "|cffC51019You have no permission to place items in this region!") 
//				case BM_BOSS_ID
//					var rdata = getRegionData(tpos)
//					if rdata.isOwner(builder.owner.getId()) and rdata.isBossRegion
//						if not rdata.hasBoss
//							new Boss(builder.owner, tpos, boss[rdata.rtype])
//							rdata.hasBoss = true
//						else
//							DisplayTextToPlayer( builder.owner, 0, 0, "|cffC51019You can only have one boss each region!") 
//					else
//						DisplayTextToPlayer( builder.owner, 0, 0, "|cffC51019You are not allowed to place Boss objects in this region!") 
//				case BM_SPELLTARGET_ID
//					if getRegionData(tpos).isOwner(builder.owner.getId()) and getRegionData(tpos).isBossRegion
//						new SpellTarget(tpos, builder.owner)
//					else
//						DisplayTextToPlayer( builder.owner, 0, 0, "|cffC51019You are not allowed to place Boss objects in this region!") 
//				case BM_DAMAGER_ID
//					if getRegionData(tpos).isOwner(builder.owner.getId()) and getRegionData(tpos).isBossRegion
//						new BossDamager(tpos, builder.owner)
//					else
//						DisplayTextToPlayer( builder.owner, 0, 0, "|cffC51019You are not allowed to place Boss objects in this region!") 
//				case BM_WEAPON_ID
//					if getRegionData(tpos).isOwner(builder.owner.getId()) and getRegionData(tpos).isBossRegion
//						new Weapon(tpos, builder.owner)
//					else
//						DisplayTextToPlayer( builder.owner, 0, 0, "|cffC51019You are not allowed to place Boss objects in this region!") 
//				case GRIDCLICK_ID
//					PlayerData pd = pData[builder.owner.getId()]
//					if pd.gridClickActivated
//						pd.gridClickActivated = false
//						DisplayTextToPlayer( builder.owner, 0, 0, "|cffffcc00Gridclick turned |cff9C0808OFF|r!") 
//					else
//						pd.gridClickActivated = true
//						DisplayTextToPlayer( builder.owner, 0, 0, "|cffffcc00Gridclick turned |cff08B552ON|r!") 
			default
				jukeBox.checkSpell(id)
	
	function setBossMenu(RegionData rdata)

	function onOrder()
		var i = GetOrderTargetItem()
		if i != null
			if GetTriggerUnit().getUserData() > 0
				var bdata = GetTriggerUnit().getUserData() castTo Builder
				var rdata = getRegionData(i.getPos())
				bdata.actor.abortOrder()
				if rdata != null and i.getUserData() > 0
					if rdata.canBuild(bdata.owner)
						var idata = i.getEntity()
						idata.terminate()
				else 
					RemoveItem(i)
					
		else
			widget w = GetOrderTarget()
			var ord = GetIssuedOrderId()
			var u = GetTriggerUnit()
			var ox = GetOrderPointX()
			var oy = GetOrderPointY()
			if isOrderBuildOrder(ord)
				getTimer()..start(0.01, function callback)
				..setData((new BuildData(u.getUserData() castTo Builder,
							 vec2(GetOrderPointX(), GetOrderPointY()), ord)castTo int))
				
			else if OrderId2String(ord) == "smart" or OrderId2String(ord) == "move"
				if w == null
					if ( ox > 0. or ox < 0. )
						
						SetUnitX(u,ox)
						SetUnitY(u,oy)
				else
					SetUnitX(u,GetWidgetX(w))
					SetUnitY(u,GetWidgetY(w))
		
function filter() returns boolean
	return GetUnitTypeId(GetFilterUnit()) == 'n008'
	
function isBuilderUnit() returns boolean
	let id = GetUnitTypeId(GetTriggerUnit())
	return id == BUILDER_1 or id == BUILDER_2 or id == BUILDER_3 or id == BUILDER_4
	
		
public function init_Builder()	
	itemTrigger = CreateTrigger()
	gg_unit_n008_0326.pause()
	
	let t = CreateTrigger()
	t.registerBuilderEvent(EVENT_PLAYER_UNIT_CONSTRUCT_FINISH)
	t.addAction(function removeWrong)
	

function removeWrong()
	GetTriggerUnit().remove()

	