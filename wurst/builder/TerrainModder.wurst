package TerrainModder
//The Terrainers appear as heroes, and which with the builders change tiles.
import BuilderConstants
import RegionData
import Event
import TerrainUtils

public constant int ICECONTROL = 'H007'
public constant int ICEUNCONTROL = 'H008'
public constant int UNWALKABLE = 'H005'
public constant int WALKABLE = 'H004'

constant int ICE_ABILITY = 'A063'
constant int REVICE_ABILITY = 'A00C'
int array UNWALKABLE_MOD_ABILITY_ID

constant int SMALL_BRUSH_ABILITY = 'A061'
constant int BIG_BRUSH_ABILITY = 'A062'

trigger castTrigger


public class TerrainModder
	unit actor
	boolean bigbrush = false
	int modification = 0// 0 = basic terrain, 1 = lava/revice 2 = poison

	construct(unit u)
		actor = u
		actor..setPos(hiddenX, hiddenY)..setPropWindow(0.)..setUserData(this castTo int)
		
		EventListener orderListener = () -> changeTerrain()
		EventListener.add(actor, EVENT_UNIT_ISSUED_POINT_ORDER, orderListener)
		EventListener.add(actor, EVENT_UNIT_ISSUED_TARGET_ORDER, orderListener)
		
		EventListener.add(actor, EVENT_UNIT_SPELL_EFFECT, () -> switchMode())

	function changeTerrain()
		var orderPos = getOrderPos()
		var oW = GetOrderTarget()
		var size = bigbrush.toInt() + 1
		
		if oW != null
			orderPos = oW.getPos()
		 
		var rdata = getRegionData(orderPos)
		if rdata == null
			return
		let owner = actor.getOwner()
		let name = owner.getName()
		let id = GetUnitTypeId(actor)
		if rdata.isOwner(GetPlayerId(owner)) or name == "Frotty" or name == "FrottyZ"
			if id == ICECONTROL
				if modification == 1
					orderPos.setTerrainType(REVICE, -1, size, 1)
				else
					orderPos.setTerrainType(CONTROLLABLEICE, -1, size, 1 )
			else if id == ICEUNCONTROL
				orderPos.setTerrainType(UNCONTROLLABLEICE, -1, size, 1 )
			else if id == WALKABLE
				orderPos.setTerrainType(rectw[rdata.rtype], -1, size, 1 )
			else if id == UNWALKABLE
				if modification == 0
					orderPos.setTerrainType(rectuw[rdata.rtype], -1, size, 1 )
				else if modification == 1
					orderPos.setTerrainType(LAVA, -1, size, 1 )
				else if modification == 2
					orderPos.setTerrainType(POISON, -1, size, 1 )
		else
			DisplayTextToPlayer( owner, 0, 0, "|cffC51019You have no permission to change terrain in this region!")

	function switchMode()
		let spell_id = GetSpellAbilityId()
		switch spell_id
			case UNWALKABLE_MOD_ABILITY_ID[1]
				UnitRemoveAbility(actor,UNWALKABLE_MOD_ABILITY_ID[1])
				UnitAddAbility(actor,UNWALKABLE_MOD_ABILITY_ID[modification])
				modification = 1
				DisplayTextToPlayer( GetOwningPlayer( GetSpellAbilityUnit() ), 0, 0, "Poison")
			case UNWALKABLE_MOD_ABILITY_ID[2]
				UnitRemoveAbility(actor,UNWALKABLE_MOD_ABILITY_ID[2])
				UnitAddAbility(actor,UNWALKABLE_MOD_ABILITY_ID[modification])
				modification = 2
				DisplayTextToPlayer( GetOwningPlayer( GetSpellAbilityUnit() ), 0, 0, "Lava")
			case UNWALKABLE_MOD_ABILITY_ID[0]
				UnitRemoveAbility(actor,UNWALKABLE_MOD_ABILITY_ID[0])
				UnitAddAbility(actor,UNWALKABLE_MOD_ABILITY_ID[modification])
				modification = 0
				DisplayTextToPlayer( GetOwningPlayer( GetSpellAbilityUnit() ), 0, 0, "Normal")
				
			case ICE_ABILITY
				UnitRemoveAbility(actor,ICE_ABILITY)
				UnitAddAbility(actor,REVICE_ABILITY)
				modification = 0
				DisplayTextToPlayer( GetOwningPlayer( GetSpellAbilityUnit() ), 0, 0, "Normal")
			case REVICE_ABILITY
				UnitRemoveAbility(actor,REVICE_ABILITY)
				UnitAddAbility(actor,ICE_ABILITY)
				modification = 1
				DisplayTextToPlayer( GetOwningPlayer( GetSpellAbilityUnit() ), 0, 0, "Reverse")
				
			case SMALL_BRUSH_ABILITY
				UnitRemoveAbility(actor,SMALL_BRUSH_ABILITY)
				UnitAddAbility(actor,BIG_BRUSH_ABILITY)
				bigbrush = false
				DisplayTextToPlayer( GetOwningPlayer( GetSpellAbilityUnit() ), 0, 0, "SmallBrush")
			case BIG_BRUSH_ABILITY
				UnitRemoveAbility(actor,BIG_BRUSH_ABILITY)
				UnitAddAbility(actor,SMALL_BRUSH_ABILITY)
				bigbrush = true
				DisplayTextToPlayer( GetOwningPlayer( GetSpellAbilityUnit() ), 0, 0, "BigBrush")
			default
				

public function init_TerrainModder()
	UNWALKABLE_MOD_ABILITY_ID[0] = 'A04Z'
	UNWALKABLE_MOD_ABILITY_ID[1] = 'A04Y'
	UNWALKABLE_MOD_ABILITY_ID[2] = 'A04X'
	
