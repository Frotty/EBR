package UnitProducer
import BaseObject
import EscaperKillers
import initlater  PlayerData
import Preloader
import TeleporterTarget
import BomberTarget
import TerrainChanger
import Bomber
import Pointer
import Knockbacker
import Faceless

constant PRODUCER_ID 	= 'H00A'
constant FIRST_PAGE 	= 'A07B'
constant SECOND_PAGE	= 'A07A'
constant AIR_KILLER 	= 'A07Y'
constant BIG_KILLER 	= 'A05F'
constant SMALL_KILLER 	= 'A05K'
constant BR_KILLER 		= 'A05G'
constant SR_KILLER 		= 'A05J'
constant TANK_KILLER 	= 'A05M'
constant TP_TARGET 		= 'A05N'
constant GLAIVE_KILLER 	= 'A05H'
constant BOMB_TARGET 	= 'A05P'
constant T_CHANGER 		= 'A05L'
constant POINTER	 	= 'A05I'
constant BOMBER	 		= 'A05O'
constant KNOCKBACK	 	= 'A07C'
constant FACELESS	 	= 'A07U'
constant FIRE	 		= 'Afre'

public class UnitProducer extends StaticBaseObject

	construct( vec2 pos, player owner )
		super(pos, CreateUnit( owner, PRODUCER_ID, pos.x, pos.y, 0.  ) , 0., CODE_NULL, CODE_NULL)
		actor.addAbility(AIR_KILLER)
		EventListener.add(actor, EVENT_PLAYER_UNIT_SPELL_CAST, () -> onCast())
		clearQuestionmark()

	function onCast() returns boolean
		var id = GetSpellAbilityId()
		var obj = GetSpellAbilityUnit().getUserData() castTo UnitProducer
		
		let rallyPos = obj.getRallyPoint().toVec2()
		var data = getRegionData(rallyPos)
		if id == SECOND_PAGE
			obj.actor..removeAbility(BIG_KILLER)..removeAbility(SMALL_KILLER)
			..removeAbility(SR_KILLER)..removeAbility(BR_KILLER)
			..removeAbility(TANK_KILLER)
			..removeAbility(GLAIVE_KILLER)..removeAbility(SECOND_PAGE)
			..removeAbility(KNOCKBACK)
			..removeAbility(FACELESS)..removeAbility(AIR_KILLER)..removeAbility(FIRE)
			..addAbility(TP_TARGET)..addAbility(BOMB_TARGET)
			..addAbility(T_CHANGER)..addAbility(POINTER)
			..addAbility(FIRST_PAGE)..addAbility(BOMBER)
			return false
		else if id == FIRST_PAGE
			obj.actor..addAbility(BIG_KILLER)..addAbility(SMALL_KILLER)
			..addAbility(SR_KILLER)..addAbility(BR_KILLER)
			..addAbility(TANK_KILLER)..addAbility(FIRE)
			..addAbility(GLAIVE_KILLER)..addAbility(SECOND_PAGE)
			..addAbility(KNOCKBACK)
			..addAbility(FACELESS)..addAbility(AIR_KILLER)
			..removeAbility(TP_TARGET)..removeAbility(BOMB_TARGET)
			..removeAbility(T_CHANGER)..removeAbility(POINTER)
			..removeAbility(FIRST_PAGE)..removeAbility(BOMBER)
			return false
		if data == null
			return false
		if data.canBuild(obj.owner) and data.getTypeSet().bigKillerId > 0 
			switch id 
				case BIG_KILLER // Big Killer
					new BigKiller(rallyPos,obj.owner)
				case SMALL_KILLER // Small Killer
					new SmallKiller(rallyPos,obj.owner)
				case BR_KILLER // Big Random Killer
					new BigRandomKiller(rallyPos,obj.owner)
				case SR_KILLER // Small Random Killer
					new SmallRandomKiller(rallyPos,obj.owner)
				case TANK_KILLER // Tank
					new TankKiller(rallyPos,obj.owner)
				case TP_TARGET
					new TeleporterTarget( vec2(rallyPos.x,rallyPos.y), obj.owner )
				case GLAIVE_KILLER
					new GlaiveKiller(rallyPos,obj.owner)
				case BOMB_TARGET
					new BomberTarget( vec2(rallyPos.x,rallyPos.y), obj.owner )
				case T_CHANGER
					new TerrainChanger( vec2(rallyPos.x,rallyPos.y), obj.owner )
				case POINTER
					new Pointer(vec2(rallyPos.x,rallyPos.y), obj.owner, angle(0))
				case BOMBER
					new Bomber(vec2(rallyPos.x,rallyPos.y), obj.owner)
				case KNOCKBACK
					new Knockbacker(vec2(rallyPos.x,rallyPos.y), obj.owner, angle(0))
				case FACELESS
					new Faceless(vec2(rallyPos.x,rallyPos.y), obj.owner, angle(0))
				case AIR_KILLER
					new AirKiller(vec2(rallyPos.x,rallyPos.y), obj.owner, angle(0))
				case FIRE
					new FireKiller(vec2(rallyPos.x,rallyPos.y), obj.owner, angle(0))
				
		else
			DisplayTextToPlayer( obj.owner, 0, 0, "|cffC51019You have no permission to build in this region!")
		return false

init
	preloadAbility(PRODUCER_ID)
	preloadAbility(FIRST_PAGE)
	preloadAbility(SECOND_PAGE)
	preloadAbility(AIR_KILLER)
	preloadAbility(BIG_KILLER)
	preloadAbility(SMALL_KILLER)
	preloadAbility(BR_KILLER)
	preloadAbility(SR_KILLER)
	preloadAbility(TANK_KILLER)
	preloadAbility(TP_TARGET)
	preloadAbility(GLAIVE_KILLER)
	preloadAbility(BOMB_TARGET)
	preloadAbility(T_CHANGER)
	preloadAbility(POINTER)
	preloadAbility(BOMBER)
	preloadAbility(KNOCKBACK)
	preloadAbility(FACELESS)
		
@init2 function init_UnitProducer()
	for pd from builderPlayers.staticItr()
		new UnitProducer( vec2(hiddenX, hiddenY), pd.p )

