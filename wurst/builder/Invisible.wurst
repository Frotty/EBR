package Invisible
import SetupObject

function onChangeVisibility()
	var id = GetSpellAbilityId()
	if id == makeUnitVisible or id == makeUnitInvisible
		var caster = GetSpellAbilityUnit()
		var dta = caster.getUserData() castTo UnitEntity
		if dta instanceof SetupObject
			let data = dta castTo SetupObject
			if id == makeUnitVisible
				data.actor..removeAbility(GHOST_INVIS_ID)..addAbility(GHOST_VIS_ID)
				data.setup..removeAbility(makeUnitVisible)..addAbility(makeUnitInvisible)
			else if id == makeUnitInvisible
				data.actor..removeAbility(GHOST_VIS_ID)..addAbility(GHOST_INVIS_ID)
				data.setup..removeAbility(makeUnitInvisible)..addAbility(makeUnitVisible)	
		else
			if id == makeUnitVisible
				caster..removeAbility(GHOST_INVIS_ID)..addAbility(GHOST_VIS_ID)
				caster..removeAbility(makeUnitVisible)..addAbility(makeUnitInvisible)
			else if id == makeUnitInvisible
				if caster.hasAbility(GHOST_VIS_ID)
					caster.removeAbility(GHOST_VIS_ID)
				caster..addAbility(GHOST_INVIS_ID)
				..removeAbility(makeUnitInvisible)
				..addAbility(makeUnitVisible)
	
@init1 function invis_init()
	EventListener.add(EVENT_PLAYER_UNIT_SPELL_CAST, () -> onChangeVisibility())
