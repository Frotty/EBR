package SetupBox
import PlayerData
import initlater Builder
import RegisterEvents
import SoundUtils

constant SETUP_BOX = 'n00A'
constant ICEI_ID = 'A057'
constant ICED_ID = 'A006'
constant PI_ID = 'A011'
constant PD_ID = 'A059'
constant LI_ID = 'A058'
constant LD_ID = 'A05A'
constant ALLOW_ID = 'A01X'
constant CLEAR_ID = 'A020'
constant BOSS_MODE_ID = 'A03E'
constant JUMP_ID = 'A07S'
constant FIRST_PAGE = 'A07B'
constant SECOND_PAGE = 'A07A'
constant INC_GRAVITY = 'A07X'
constant DEC_GRAVITY = 'A07W'
constant MAX_SLIDESPEED = 15.
constant MAX_DOT_DMG = 20.
constant BOSS_SOUND = new SoundDefinition("Sound\\Dialogue\\Extra\\MuradinTaunt1.mp3", 2299, false)

public class SetupBox extends UnitEntity
	private RegionData rdata
	
	construct( vec2 pos, player owner, RegionData data )
		super(pos.toVec3(), createUnit( owner, SETUP_BOX, pos, angle(0) ))
		rdata = data
		actor..addAbility(ALLOW_ID)..addAbility(JUMP_ID)..addAbility(CLEAR_ID)..addAbility(SECOND_PAGE)
		..addAbility(INC_GRAVITY)..addAbility(DEC_GRAVITY)
		EventListener.add(actor, EVENT_PLAYER_UNIT_SPELL_EFFECT, () -> onCast())
		
	function addBossSwitch()
		actor.addAbility(BOSS_MODE_ID)
		
	function onCast()
		var id = GetSpellAbilityId()
		let owner = actor.getOwner()
		switch id
			case ICEI_ID
				if rdata.slidespeed >= MAX_SLIDESPEED
					DisplayTextToPlayer( owner, 0, 0, "Slidespeed is on Maximum" )
				else
					rdata.slidespeed += .25
					DisplayTextToPlayer( owner, 0, 0, "Slidespeed: " + rdata.slidespeed.toString() )
			case ICED_ID
				if rdata.slidespeed <= -MAX_SLIDESPEED
					DisplayTextToPlayer( owner, 0, 0, "Slidespeed is on Minimum" )
				else
					rdata.slidespeed -= .25
					DisplayTextToPlayer( owner, 0, 0, "Slidespeed: " + rdata.slidespeed.toString() )
			case PI_ID
				if rdata.poisonDmg >= MAX_DOT_DMG
					DisplayTextToPlayer( owner, 0, 0, "Poisondamage is on Maximum" )
				else
					rdata.poisonDmg += .25
					DisplayTextToPlayer( owner, 0, 0, "Poisondamage: " + rdata.poisonDmg.toString() )
			case PD_ID
				if rdata.poisonDmg <= .25
					DisplayTextToPlayer( owner, 0, 0, "Poisondamage is on Minimum" )
				else
					rdata.poisonDmg -= .25
					DisplayTextToPlayer( owner, 0, 0, "Poisondamage: " + rdata.poisonDmg.toString() )
			case LI_ID
				if rdata.lavaDmg >= MAX_DOT_DMG
					DisplayTextToPlayer( owner, 0, 0, "Lavadmg is on Maximum" )
				else
					rdata.lavaDmg += .25
					DisplayTextToPlayer( owner, 0, 0, "Lavadmg: " + rdata.lavaDmg.toString() )
			case LD_ID
				if rdata.lavaDmg <= .25
					DisplayTextToPlayer( owner, 0, 0, "Lavadmg is on Minimum" )
				else
					rdata.lavaDmg -= .25
					DisplayTextToPlayer( owner, 0, 0, "Lavadmg: " + rdata.lavaDmg.toString() )
			case ALLOW_ID
				var u = GetSpellTargetUnit()
				var p = u.getOwner()
				if isBuilder(p) and p != owner
					addEffect("Abilities\\Spells\\Human\\Invisibility\\InvisibilityTarget.mdl", u.getPos()).destr()
					if rdata.canBuild(p)
						rdata.disallow(p)
						printTimedToPlayer("|cff9C0808Disallowed|r " + p.getNameColored() + " |cffffcc00to build in your region.", 25, owner)
						printTimedToPlayer(owner.getNameColored() + " |cff9C0808disallowed|r|cffffcc00 you to build in his region.", 25, p)
						if GetLocalPlayer() == p
							PingMinimapEx((GetRectMinX(rdata.theRect)+GetRectMaxX(rdata.theRect))/2, (GetRectMinY(rdata.theRect)+GetRectMaxY(rdata.theRect))/2, 3, 156, 8, 8, false)
					else
						rdata.allow(p)
						printTimedToPlayer("|cff08B552Allowed|r " + p.getNameColored() + " |cffffcc00to build in your region.", 25, owner)
						printTimedToPlayer(owner.getNameColored() + " |cff08B552allowed|r|cffffcc00 you to build in his region.", 25, p)
						if GetLocalPlayer() == p
							PingMinimapEx((GetRectMaxX(rdata.theRect)+GetRectMinX(rdata.theRect))/2, (GetRectMaxY(rdata.theRect)+GetRectMinY(rdata.theRect))/2, 3, 8, 181, 82, false)
				else
					printTimedToPlayer("|cffC51019Why would you do this!", 15, owner)
						
			case CLEAR_ID
				GroupEnumUnitsInRect(ENUM_GROUP, rdata.theRect, null)
				for u in ENUM_GROUP
					var data = u.getEntity()
					if data != null and not data instanceof Escaper and not data instanceof Builder and u != actor 
						data.terminate()

				rdata.resetTiles()
			case JUMP_ID
				let rdata = getRegionData(pos)
				if rdata.jumpAvailable
					printTimedToPlayer("|cff448C29Escapers can't jump in this region!", 25, owner)
				else
					printTimedToPlayer("|cffFF8C29Escapers can now jump in this region!", 25, owner)
				rdata.jumpAvailable = not rdata.jumpAvailable
			case BOSS_MODE_ID
				if pData[owner.getId()].XP >= 0 //500
					BOSS_SOUND.play()
					actor.removeAbility(BOSS_MODE_ID)
					rdata.setBossRegion()
					printTimedToPlayer("|cff63BD4AYou converted your area to a |cff086BBDB|r|cff0C5CB0o|r|cff104DA3s|r|cff143E96s|r|cff182F89r|r|cff1C207Ce|r|cff590E4Fg|r|cff750D41i|r|cff910C33o|r|cffAD0B25n|r", 15, owner)
					addEffect("Abilities\\Spells\\Other\\Doom\\DoomDeath.mdl",actor.getPos()).destr()
					let builder = pData[owner.getId()].builder
					SelectUnitForPlayerSingle(builder.actor, owner)
					GroupEnumUnitsInRect(ENUM_GROUP, rdata.theRect, null)
					builder.setBossMenu()
				else
					DisplayTextToPlayer( owner, 0, 0, "|cffFFD621[Info]|r - You need to have at least the |cffFFE6AD3:Novice|r Rank to be able to make a BossRegion.\nYou accumulate Rank-XP over time by playing." )
			case SECOND_PAGE
				actor..removeAbility(ALLOW_ID)..removeAbility(JUMP_ID)..removeAbility(CLEAR_ID)..removeAbility(SECOND_PAGE)
				..removeAbility(INC_GRAVITY)..removeAbility(DEC_GRAVITY)
				actor..addAbility(ICEI_ID)..addAbility(ICED_ID)..addAbility(PI_ID)..addAbility(PD_ID)
				..addAbility(LI_ID)..addAbility(LD_ID)..addAbility(FIRST_PAGE)
			case FIRST_PAGE
				actor..removeAbility(ICEI_ID)..removeAbility(ICED_ID)..removeAbility(PI_ID)..removeAbility(PD_ID)
				..removeAbility(LI_ID)..removeAbility(LD_ID)..removeAbility(FIRST_PAGE)
				actor..addAbility(ALLOW_ID)..addAbility(JUMP_ID)..addAbility(CLEAR_ID)..addAbility(SECOND_PAGE)
				..addAbility(INC_GRAVITY)..addAbility(DEC_GRAVITY)
			case INC_GRAVITY
				if(rdata.gravity.z > -10)
					rdata.gravity -= vec3(0,0,0.1)
					printTimedToPlayer("Gravity: " + rdata.gravity.z.toString(), 10, owner)
			case DEC_GRAVITY
				if(rdata.gravity.z < -.1)
					rdata.gravity += vec3(0,0,0.1)
					printTimedToPlayer("Gravity: " + rdata.gravity.z.toString(), 10, owner)
init
	registerPlayerUnitEvent(EVENT_PLAYER_UNIT_SELL_ITEM, () -> claimRegion())
	
function claimRegion()
	var seller = GetTriggerUnit()
	var buyer = GetBuyingUnit()
	let itm = GetSoldItem()
	var id = GetItemTypeId(itm)
	var builder = buyer.getUserData() castTo Builder
	builder.updatePos()
	var rdata = getRegionData(seller.getPos())
	let rtype = getRegionTypeFromItem(id)
	if rdata.rtype == RegionType.UNKNOWN and rtype != RegionType.UNKNOWN
		itm.remove()
		if builder.regionCount > 0
			builder.regionCount--
			rdata.setType(rtype, true)
			rdata.setOwner(builder.owner)
			GetManipulatedItem().remove()
			addEffect("Abilities\\Spells\\Other\\Charm\\CharmTarget.mdl", seller.getPos()).destr()
			seller.remove()		
			
			DisplayTextToPlayer( builder.owner, 0, 0, "|cff6BC54AYou claimed this region!\nA |cffFFCC00Setupunit|cff6BC54A has been created at the |cffFFCC00left top corner|cff6BC54A of your region.")
			new SetupBox( vec2(GetRectMinX(rdata.theRect)  + 192., GetRectMaxY(rdata.theRect) - 192. ), builder.owner, rdata )
			if GetLocalPlayer() == builder.owner
				SelectUnit(builder.actor, true)
		else
			printTimedToPlayer("|cff3187CBYou have used up all your regions. Leave some for the other builders", 15, builder.owner)