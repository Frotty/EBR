package Tracks
import Entity
import Escaper
import ConfigValue

int array TRACKS

constant int TRACK_ID 			= 'n01S'
constant int INC_ID		  	= 'A04S'
constant int DEC_ID		  	= 'A04T'
constant int LEFT_ID		 	= 'A04L'
constant int RIGHT_ID	   	= 'A04U'
constant int INCLENGTH_ID   	= 'A04H'
constant int DECLENGTH_ID		= 'A050'

public class Tracks extends UnitEntity
	unit setup
	
	ConfigValue trackSpeed = new ConfigValue(2, 0.25, "Trackspeed")
	int tsize = 0
	int height = 0
	int width  = 0
	int angl = 0
	
	construct( vec2 pos, player owner )
		super( pos.toVec3(), CreateUnit(owner, TRACKS[0], pos.x, pos.y, 0) )
		setup = CreateUnit(owner, TRACK_ID, pos.x, pos.y, 0 )
		setup.setUserData(this castTo int)
		EventListener.add(setup, EVENT_PLAYER_UNIT_SPELL_CAST, () -> onCast())
		
		
	override function update()
		for escaper in escapers
			if escaper.pos.z < 22 and ( escaper.pos.x > pos.x - width * 128 - 64 and escaper.pos.x < pos.x + width * 128 + 64 
				and escaper.pos.y > pos.y - height * 128 - 64 and escaper.pos.y < pos.y + height * 128 + 64 )
				
				escaper.trackVelocity += vec3(Cos((angl+90) * DEGTORAD) * trackSpeed.get(), Sin((angl+90) * DEGTORAD) * trackSpeed.get(), 0. )
		
				
	function recreateDummy()
		actor.remove()
		actor = CreateUnit(owner, TRACKS[tsize], pos.x, pos.y, angl.toReal())
		
	ondestroy
		setup.remove()
		actor.remove()
				
	function onCast()
		let id = GetSpellAbilityId()
		switch id
			case INC_ID
				trackSpeed.increment(this, 20)
			case DEC_ID
				trackSpeed.decrement(this, 1)
			case INCLENGTH_ID
				if tsize < 2
					tsize++
					if angl == 0 or angl == 180
						height++
					else
						width++
					recreateDummy()
			case DECLENGTH_ID
				if tsize > 0
					tsize--
					if angl == 0 or angl == 180
						height--
					else
						width--
					recreateDummy()
			case LEFT_ID
				angl += 90
				var temp1 = height
				height = width
				width = temp1
				recreateDummy()
			case RIGHT_ID
				angl -= 90
				var temp2 = height
				height = width
				width = temp2
				recreateDummy()
		actor.setTimeScale(0.5+trackSpeed.get()/6)
		
	
init
	TRACKS[0] = 'n01R'
	TRACKS[1] = 'n01L'
	TRACKS[2] = 'n01N'
	