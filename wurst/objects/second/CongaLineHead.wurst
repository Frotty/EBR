package CongaLineHead
import SetupObject
import LinkedList
import Spinner
import Texttag
import Remove

constant int UNIT_ID = 'h000'

constant int ADD_ID = 'A02Y'
constant int INC_ID = 'A02Z'
constant int DEC_ID = 'A030'

public class CongaLineHead extends SetupObject
	LinkedList<SetupObject> segments
	real segLength = 75.
	
	construct(vec2 pos, player owner)
		super(pos.toVec3(), createUnit(owner, UNIT_ID, pos, angle(0)), createUnit(owner, UNIT_ID, pos, angle(0)), 0. )
		EventListener.add(setup, EVENT_PLAYER_UNIT_SPELL_CAST, () -> onCast())
		segments = new LinkedList<SetupObject>()
		
	override function update()
		super.update()
		int i = 0
		UnitEntity se = null
		for e in segments
			if i == 0
				e.setNewPosA(calculateSegmentPos(pos.toVec2(), e.pos.toVec2(), 75.), e.pos.angleTo2d(pos).degrees())
			else
				e.setNewPosA(calculateSegmentPos(se.pos.toVec2(), e.pos.toVec2(), segLength), e.pos.angleTo2d(pos).degrees())
				
			se = e
			i++

		
	function addSegment(SetupObject e)
		boolean isNew = true
		for de in segments
			if de == e
				isNew = false
				break
		if isNew
			segments.add(e)
			e.setup.removeAbility(REMOVE_ID)
		else
			segments.remove(e)
			e.setup.addAbility(REMOVE_ID)
	
	static function onCast() returns boolean
		var id = GetSpellAbilityId()
		var t = GetSpellTargetUnit()
		var data = GetSpellAbilityUnit().getUserData() castTo CongaLineHead
		switch id
			case ADD_ID
				var ed = t.getUserData() castTo UnitEntity
				if ed.owner == data.owner and ed instanceof SetupObject
					data.addSegment(ed castTo SetupObject)
			case INC_ID
				if data.segLength < 500.
					data.segLength += 25
					createTTEx(data.pos, vec2(0,0.05), "Segment Length: "+ R2SW(data.segLength,1,2), 10,  2., colorA(255,255,255,0), data.owner  )
				else
					createTTEx(data.pos, vec2(0,0.05), "Maximum Speed", 10,  2., colorA(255,255,255,0), data.owner  )
			case DEC_ID
				if data.segLength > 25
					data.segLength -= 25
					createTTEx(data.pos, vec2(0,0.05), "Segment Length: "+ R2SW(data.segLength,1,2), 10,  2., colorA(255,255,255,0), data.owner  )
				else
					createTTEx(data.pos, vec2(0,0.05), "Minimum Speed", 10,  2., colorA(255,255,255,0), data.owner  )
			
				
		return false
		
	ondestroy
		for SetupObject dso in segments
			dso.setup.addAbility(REMOVE_ID)
		destroy segments

		
function UnitEntity.setNewPosA( vec2 tpos, real angl)
	if this instanceof SetupObject
		(this castTo SetupObject).setXY(tpos.toVec3())
		(this castTo SetupObject).setAngle(angl)
	else if this instanceof Spinner
		(this castTo Spinner).setXY(tpos.toVec3())
		(this castTo Spinner).actor.setFacing(angl)
		
function calculateSegmentPos(vec2 pos1, vec2 pos2, real segLength) returns vec2
	let angl = pos2.angleTo(pos1)
	return vec2(pos1.x - Cos(angl.radians()) * segLength,
				pos1.y - Sin(angl.radians()) * segLength)
				
