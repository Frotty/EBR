package Knockbacker
import Escaper
import EscaperKillers
import ChannelAbilityPreset

public constant KNOCKER_ID = 'u00G'
public int KNOCK_INC_ID
public int KNOCK_DEC_ID
public int DMG_INC_ID
public int DMG_DEC_ID

public class Knockbacker extends EscaperSensorSetup
	ConfigValue kforce = new ConfigValue(20, 2.5, "Knockback")
	ConfigValue damage = new ConfigValue(50, 25, "Damage")

	construct(vec2 pos, player owner, angle facing)
		super(pos.toVec3(), owner, KNOCKER_ID, facing, 64., 160.)
		setup..addAbility(KNOCK_INC_ID)..addAbility(KNOCK_DEC_ID)
		..addAbility(DMG_INC_ID)..addAbility(DMG_DEC_ID)
		EventListener.add(setup, EVENT_PLAYER_UNIT_SPELL_CAST, () -> onCast())
					
	function onCast() returns boolean
		let id = GetSpellAbilityId()
		switch id
			case KNOCK_INC_ID
				kforce.increment(this, 75)
			case KNOCK_DEC_ID
				kforce.decrement(this, 5)
			case DMG_INC_ID
				damage.increment(this, 500)
			case DMG_DEC_ID
				damage.decrement(this, 0)	
		return false
		
	override function onSensor(UnitEntity source, UnitEntity target)
		if target instanceof Escaper
			if target.pos.z <= sensorHeight
				let escaper = target castTo Escaper
				let ang = pos.angleTo2d(escaper.pos)
				escaper.addVel(vec3(ang.cos()*kforce.get(),ang.sin()*kforce.get(),0))
				actor.damageTarget(escaper.actor, damage.get())
				actor.setAnimation("attack")
				setup.setAnimation("attack")
				addEffect("Abilities\\Spells\\Orc\\WarStomp\\WarStompCaster.mdl", escaper.pos).destr()	


@objectgen function genKnockbacker()
	KNOCK_INC_ID = ABIL_ID_GEN.next()
	KNOCK_DEC_ID = ABIL_ID_GEN.next()
	DMG_INC_ID = ABIL_ID_GEN.next()
	DMG_DEC_ID = ABIL_ID_GEN.next()
	if compiletime
		let inc_spell = new ChannelAbilityPreset(KNOCK_INC_ID, 1, true)
		inc_spell..presetManaCost((int lvl) -> 0)
		..setHeroAbility(false)
		..presetCooldown((int lvl) -> 0)
		..setName("Knockbacker: Increase Knockback")
		..presetIcon("ReplaceableTextures\\CommandButtons\\BTNknockbackincrease.blp")
		..presetHotkey("A")
		..presetTooltipNormal((int lvl) -> "Increase Knockback [|cffFFCC00A|r]")
		..presetTooltipNormalExtended((int lvl) -> "More strength to the tauren")
		..presetButtonPosNormal(1, 1)
		
		let dec_spell = new ChannelAbilityPreset(KNOCK_DEC_ID, 1, true)
		dec_spell..presetManaCost((int lvl) -> 0)
		..setHeroAbility(false)
		..presetCooldown((int lvl) -> 0)
		..setName("Knockbacker: Decrease Knockback")
		..presetIcon("ReplaceableTextures\\CommandButtons\\BTNknockbackdecrease.blp")
		..presetHotkey("D")
		..presetTooltipNormal((int lvl) -> "Decrease Knockback [|cffFFCC00D|r]")
		..presetTooltipNormalExtended((int lvl) -> "Less strength to the tauren")
		..presetButtonPosNormal(2, 1)

		let inc_spelld = new ChannelAbilityPreset(DMG_INC_ID, 1, true)
		inc_spelld..presetManaCost((int lvl) -> 0)
		..setHeroAbility(false)
		..presetCooldown((int lvl) -> 0)
		..setName("Knockbacker: Increase Damage")
		..presetIcon("ReplaceableTextures\\CommandButtons\\BTNReplay-Speedup.blp")
		..presetHotkey("R")
		..presetTooltipNormal((int lvl) -> "Increase Damage [|cffFFCC00R|r]")
		..presetTooltipNormalExtended((int lvl) -> "Increases damage output")
		..presetButtonPosNormal(3, 0)
		
		let dec_spelld = new ChannelAbilityPreset(DMG_DEC_ID, 1, true)
		dec_spelld..presetManaCost((int lvl) -> 0)
		..setHeroAbility(false)
		..presetCooldown((int lvl) -> 0)
		..setName("Knockbacker: Decrease Knockback")
		..presetIcon("ReplaceableTextures\\CommandButtons\\BTNReplay-Speeddown.blp")
		..presetHotkey("F")
		..presetTooltipNormal((int lvl) -> "Decrease Damage [|cffFFCC00F|r]")
		..presetTooltipNormalExtended((int lvl) -> "Less strength to the tauren")
		..presetButtonPosNormal(3, 1)
	
