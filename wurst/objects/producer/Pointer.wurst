package Pointer
import EscaperSensor
import Escaper
import Preloader

constant int POINTER_ID = 'h01Q'
constant POINTER_RADIUS = 64.
constant int INC_ID = 'A01F'
constant int DEC_ID = 'A01G'
constant int START_ID = 'A031'
constant int STOP_ID = 'A032'


public class Pointer extends EscaperSensorSetup
	real turnspeed = 2.
	angle angl
	boolean turning = false
	
	construct(vec2 pos, player owner, angle facing)
		super(pos.toVec3(), owner, POINTER_ID, facing, POINTER_RADIUS, 16.)
		EventListener.add(setup, EVENT_PLAYER_UNIT_SPELL_CAST, () -> onCast())
		angl = facing
		
	override function update()
		if turning
			angl += turnspeed.asAngleDegrees()
			angl = (angl.degrees() % 360).asAngleDegrees()
			actor..setXY(setup.getPos())
			..setFacing(angl)
		else
			super.update()
		
	function onCast()
		let id = GetSpellAbilityId()
		switch id
			case INC_ID
				if turnspeed < 6.
					turnspeed += 0.5
					createFText(pos, vec2(0,0.05), "Turnspeed: "+ R2SW(turnspeed,1,2), 10,  2., colorA(255,255,255,0), owner  )
				else
					createFText(pos, vec2(0,0.05), "Maximum Speed", 10,  2., colorA(255,255,255,0), owner  )
			case DEC_ID
				if turnspeed > -6.
					turnspeed -= 0.5
					createFText(pos, vec2(0,0.05), "Turnspeed: "+ R2SW(turnspeed,1,2), 10,  2., colorA(255,255,255,0), owner  )
				else
					createFText(pos, vec2(0,0.05), "Minimum Speed", 10,  2., colorA(255,255,255,0), owner  )
			case START_ID
				turning = true
				angl = actor.getFacingAngle()
				activate()
				setup..removeAbility(START_ID)..addAbility(STOP_ID)
			case STOP_ID
				turning = false
				deactivate()
				setup..removeAbility(STOP_ID)..addAbility(START_ID)

	override function onSensor(UnitEntity source, UnitEntity target)
		var edata = target
		var data = source castTo Pointer
		if edata instanceof Escaper
			var es = edata castTo Escaper
			es.actor.setFacing(data.angl)
	
	static function setfacing()
		string chatmsg = GetEventPlayerChatString()
		real facing = 0
		if SubString(chatmsg, 0, 4) == "-sa "
			facing = S2R(SubString(chatmsg, 4, StringLength(chatmsg)))
		else if SubString(chatmsg, 0, 10) == "-setangle "
			facing = S2R(SubString(chatmsg, 10, StringLength(chatmsg)))
		for u from getSelectedPointers(GetTriggerPlayer())
			Pointer obj = u.getUserData() castTo Pointer
			obj.angl = facing.asAngleDegrees()
			obj.setup.setFacing(obj.angl)
			obj.actor.setFacing(obj.angl)
			createFText(obj.pos, vec2(0,0.05), facing.toString(), 10,  2., colorA(255,175,75,0), obj.owner  )

	override function serialize() returns Json
		let json = super.serialize()
		json
		..addProperty(new Property(KEY_TYPE, POINTER_INDEX.toString()))
		return json
		
function getSelectedPointers(player p) returns group
	GroupEnumUnitsOfType(ENUM_GROUP, UnitId2String(POINTER_ID), null)
	for u in ENUM_GROUP
		if not (GetOwningPlayer(u) == p and IsUnitSelected(u, p))
			GroupRemoveUnit(ENUM_GROUP, u)
	return ENUM_GROUP	
	
@init2 function init_Pointer()
	trigger t = CreateTrigger()
	for int i = 0 to 11
		TriggerRegisterPlayerChatEvent(t,players[i], "-setangle ", false)
		TriggerRegisterPlayerChatEvent(t,players[i], "-sa ", false)
	TriggerAddAction(t, function Pointer.setfacing)
	
init
	preloadAbility(START_ID)
	preloadAbility(STOP_ID)
	preloadAbility(INC_ID)
	preloadAbility(DEC_ID)
