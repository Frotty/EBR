package Pointer
import Entity
import Escaper
import EventHandling
import Texttag
import TempGroups
import PreloadHandler

constant int POINTER_ID = 'h01Q'

constant int INC_ID = 'A01F'
constant int DEC_ID = 'A01G'
constant int START_ID = 'A031'
constant int STOP_ID = 'A032'


public class Pointer extends UnitEntity
	real turnspeed = 2.
	real angl = 0.
	boolean turning
	
	unit setup
	
	trigger trig
	
	construct(vec2 pos, player owner)
		super(pos.toVec3(), CreateUnit(owner, POINTER_ID, pos.x, pos.y, 0.))
		actor.addAbility(LOCUST_ID)
		setup = CreateUnit(owner, POINTER_ID, pos.x, pos.y, 0.)
		setup.addAbility('Agho')
		trig = CreateTrigger()
		trig.registerUnitInRangeSource(setup, 64.)
		trig.addAction(function Pointer.turnUnit)
		setup.registerCastEvent(Condition(function Pointer.onCast))
		setup.setUserData(this castTo int)
		
	override function update()
		pos = vec3(setup.getX(), setup.getY(), 0.)
		actor.setPos(pos.x, pos.y)
		actor.setFacing(angl)
		if turning
			angl += turnspeed
			
	static function onCast() returns boolean
		var id = GetSpellAbilityId()
		var data = GetSpellAbilityUnit().getUserData() castTo Pointer
		switch id
			case INC_ID
				if data.turnspeed < 6.
					data.turnspeed += 0.5
					createTTEx(data.pos, vec2(0,0.05), "Turnspeed: "+ R2SW(data.turnspeed,1,2), 10,  2., colorA(255,255,255,0), data.owner  )
				else
					createTTEx(data.pos, vec2(0,0.05), "Maximum Speed", 10,  2., colorA(255,255,255,0), data.owner  )
			case DEC_ID
				if data.turnspeed > -6.
					data.turnspeed -= 0.5
					createTTEx(data.pos, vec2(0,0.05), "Turnspeed: "+ R2SW(data.turnspeed,1,2), 10,  2., colorA(255,255,255,0), data.owner  )
				else
					createTTEx(data.pos, vec2(0,0.05), "Minimum Speed", 10,  2., colorA(255,255,255,0), data.owner  )
			case START_ID
				data.turning = true
				data.setup..removeAbility(START_ID)..addAbility(STOP_ID)
			case STOP_ID
				data.turning = false
				data.setup..removeAbility(STOP_ID)..addAbility(START_ID)
					
		return false

	static function turnUnit()
		var edata = GetTriggerUnit().getEntity()
		var data = GetTriggeringTrigger().getSource().getUserData() castTo Pointer
		if edata instanceof Escaper
			var es = edata castTo Escaper
			es.actor.setFacing(data.angl)
	
	static function setfacing()
		debugPrint("SETTING FACING",4)
		string chatmsg = GetEventPlayerChatString()
		real facing = 0
		if SubString(chatmsg, 0, 4) == "-sa "
			facing = S2R(SubString(chatmsg, 4, StringLength(chatmsg)))
		else if SubString(chatmsg, 0, 10) == "-setangle "
			facing = S2R(SubString(chatmsg, 10, StringLength(chatmsg)))
		for unit u in getSelectedPointers(GetTriggerPlayer())
			Pointer obj = u.getUserData() castTo Pointer
			obj.angl = facing
			createTTEx(obj.pos, vec2(0,0.05), facing.toString(), 10,  2., colorA(255,175,75,0), obj.owner  )
		
				
	ondestroy
		actor.unregisterCastEvent()
		actor.remove()
		setup.remove()
		trig.destr()
		
function getSelectedPointers(player p) returns group
	GroupEnumUnitsOfType(ENUM_GROUP, UnitId2String(POINTER_ID), null)
	group g = CreateGroup()
	for unit u in ENUM_GROUP
		if IsUnitSelected( u, p) and GetOwningPlayer(u) == p
			GroupAddUnit(g, u)
	ENUM_GROUP.clear()
	return g	
	
public function init_Pointer()
	trigger t = CreateTrigger()
	for int i = 8 to 10
		TriggerRegisterPlayerChatEvent(t,Player(i), "-setangle ", false)
		TriggerRegisterPlayerChatEvent(t,Player(i), "-sa ", false)
	TriggerAddAction(t, function Pointer.setfacing)
	
init
	debugPrint("wc3init Pointer begin", 2)
	preloadAbility(START_ID)
	preloadAbility(STOP_ID)
	preloadAbility(INC_ID)
	preloadAbility(DEC_ID)
	debugPrint("wc3init Pointer finish", 2)