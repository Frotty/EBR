package TextureChanger
import Entity
import SetupObject
import RegionData
import TerrainBlocker
import BuilderConstants
import Texttag
import Preloader
import BaseObject
import BitSet

constant int TEXTURECHANGER_ID	= 'n01E'

constant int TERRAIN_O_WALKABLE_ID = 'A02G'
constant int TERRAIN_O_UNWALKABLE_ID = 'A02C'
constant int TERRAIN_O_ICE_ID = 'A02B'
constant int TERRAIN_O_UNICE_ID = 'A02E'
constant int TERRAIN_I_WALKABLE_ID = 'A02H'
constant int TERRAIN_I_UNWALKABLE_ID = 'A02F'
constant int TERRAIN_I_ICE_ID = 'A02A'
constant int TERRAIN_I_UNICE_ID = 'A02D'
constant int TERRAIN_INC_H_ID = 'A01K'
constant int TERRAIN_INC_V_ID = 'A01M'
constant int TERRAIN_DEC_H_ID = 'A01U'
constant int TERRAIN_DEC_V_ID = 'A01T'


public class TextureChanger extends DynamicSetupObject
	int sizeX = 1
	int sizeY = 1
	matrixpos mp = matrixpos(0,0)
	int innerTile = '0000'
	int outerTile = '0001'

	construct(vec2 pos, player owner)
		super(pos.toVec3(), CreateUnit(owner, TEXTURECHANGER_ID, pos.x, pos.y, 0), CreateUnit(owner, TEXTURECHANGER_ID, pos.x, pos.y, 0), 0, CODE_NULL)
		EventListener.add(setup, EVENT_PLAYER_UNIT_SPELL_CAST, () -> onCast())
		
		
	override function update()
		super.update()
		var tX = (pos.x/128).round()
		var tY = (pos.y/128).round()
		RegionData data
		int tileID
		if tX != mp.x or tY != mp.y
			mp.x = tX
			mp.y = tY
			for int i = -(sizeY+1) to sizeY+1
				for int j = -(sizeX+1) to sizeX+1
					if not bitset(tileModifierMap.loadInt(tX+j, tY+i)).contains(TileModifiers.BLOCK castTo int)
						var x = (tX+j)*128.
						var y = (tY+i)*128.
						if (j == -(sizeX+1)) or (j == sizeX+1) or (i == -(sizeY+1)) or (i == sizeY+1)
							tileID = outerTile
						else
							tileID = innerTile
						data = getRegionData(vec2(x,y))
						if data != null 
							if data.isOwner(GetPlayerId(owner)) 
								if tileID == '0000'
									tileID = rectw[data.rtype]
								else if tileID == '0001'
									tileID = rectuw[data.rtype]
								if GetTerrainType(x, y) != tileID
									SetTerrainType(x, y, tileID, 0, 1, 1 )
							
	
	function onCast()
		let i = GetSpellAbilityId()
		
		switch i
			case TERRAIN_INC_H_ID
				if sizeX < 3
					sizeX ++
				else
					createTTEx(pos, vec2(0,0.05), "|cffC51019Max Horizontal", 10,  2., colorA(255,255,255,0), owner )
			case TERRAIN_INC_V_ID
				if sizeY < 3
					sizeY ++
				else
					createTTEx(pos, vec2(0,0.05), "|cffC51019Max Vertical", 10,  2., colorA(255,255,255,0), owner )
			case TERRAIN_DEC_H_ID
				if sizeX > 0
					sizeX --
				else
					createTTEx(pos, vec2(0,0.05), "|cffC51019Min Horizontal", 10,  2., colorA(255,255,255,0), owner )
			case TERRAIN_DEC_V_ID
				if sizeY > 0
					sizeY --
				else
					createTTEx(pos, vec2(0,0.05), "|cffC51019Min Vertical", 10,  2., colorA(255,255,255,0), owner )
			case TERRAIN_I_WALKABLE_ID
				innerTile = '0000'
			case TERRAIN_I_UNWALKABLE_ID
				innerTile = '0001'
			case TERRAIN_I_ICE_ID
				innerTile = CONTROLLABLEICE
			case TERRAIN_I_UNICE_ID
				innerTile = UNCONTROLLABLEICE
			case TERRAIN_O_WALKABLE_ID
				outerTile = '0000'
			case TERRAIN_O_UNWALKABLE_ID
				outerTile = '0001'
			case TERRAIN_O_ICE_ID
				outerTile = CONTROLLABLEICE
			case TERRAIN_O_UNICE_ID
				outerTile = UNCONTROLLABLEICE
		mp.x = -1
		update()
					
			
init
	preloadAbility(TERRAIN_O_WALKABLE_ID)
	preloadAbility(TERRAIN_O_UNWALKABLE_ID)
	preloadAbility(TERRAIN_O_ICE_ID)
	preloadAbility(TERRAIN_O_UNICE_ID)
	preloadAbility(TERRAIN_I_WALKABLE_ID)
	preloadAbility(TERRAIN_I_UNWALKABLE_ID)
	preloadAbility(TERRAIN_I_ICE_ID)
	preloadAbility(TERRAIN_I_UNICE_ID)
	preloadAbility(TERRAIN_INC_H_ID)
	preloadAbility(TERRAIN_INC_V_ID)
	preloadAbility(TERRAIN_DEC_H_ID)
	preloadAbility(TERRAIN_DEC_V_ID)

