package Powernode
import LinkedList
import Entity
import Escaper
import EventHandling
import SetupObject
import BaseObject

constant int LINK_ID = 'A051'
constant string EFFECT_STRING = "DRAM"
constant string KILL_EFFECT = "Abilities\\Spells\\Human\\ManaFlare\\ManaFlareBoltImpact.mdl"
constant int NODE_ID = 'h0nn'
constant real ACTIVATION_DIST = 22.

class Link
	Powernode linkedNode
	lightning sfx
	
	construct( Powernode node, lightning sfx )
		linkedNode = node
		this.sfx = sfx
		
	ondestroy
		DestroyLightning(sfx)


public class Powernode extends DynamicSetupObject
	LinkedList<Link> links = new LinkedList<Link>()

	construct( vec2 pos, player owner )
		super( pos.toVec3(), CreateUnit( owner, NODE_ID, pos.x, pos.y, 0 ), CreateUnit( owner, NODE_ID, pos.x, pos.y, 0 ), 0., CODE_NULL )
		setup.registerCastEvent(Condition(function onCast))

		
	function unlink( Link l )
		links.remove(l)
		destroy l
		
	function link( Powernode p )
		links.add(new Link(p, AddLightning(EFFECT_STRING, false, pos.x, pos.y, p.pos.x, p.pos.y)))
		
	override function update()
		pos.x = setup.getX()
		pos.y = setup.getY()
		if links.size > 0
			debugPrint(links.size.toString(), 1)
			var i = 0
			while i < links.size
				Link l = links.get(i)
				if not l.linkedNode.done 
					MoveLightning(l.sfx, false, pos.x, pos.y, l.linkedNode.pos.x, l.linkedNode.pos.y)
					for Escaper e in escapers
						if e.alive and not e.flying and e.pos.toVec2().distToSegmentSquared(pos.toVec2(), l.linkedNode.pos.toVec2() ) < ACTIVATION_DIST.squared()
							e.kill()
							AddSpecialEffect( KILL_EFFECT , e.pos.x, e.pos.y ) 
				else
					links.removeAt(i)
					destroy l
					if i == links.size
						break
					i--
				i++
				
	
	
	ondestroy
		actor.unregisterCastEvent()
		debugPrint("nodey " + links.size.toString(),3)
		while links.size > 0
			Link l = links.get(0)
			debugPrint("got link " + (l castTo int).toString(), 1)
			links.removeAt(0)
			destroy l
		destroy links	
	
	static function onCast() returns boolean
		var id = GetSpellAbilityId()
		var target = GetSpellTargetUnit()
		var node = GetTriggerUnit().getUserData() castTo Powernode
		debugPrint("node cast " + (node castTo int).toString(), 1)
		switch id
			case LINK_ID
				debugPrint("node cast link", 1)
				var data = target.getUserData() castTo Entity
				if data instanceof Powernode
					debugPrint("node cast link is node", 1)
					var pdata = data castTo Powernode
					var isNew = true
					var i = 0
					while i < node.links.size
						Link l = node.links.get(i)
						if l.linkedNode == pdata 
							node.links.removeAt(i)
							destroy l
							isNew = false
							break
							
						i++
					if isNew
						node.link(data castTo Powernode)
						
		//node.setup.issuePastOrder(2)

		return false

		
