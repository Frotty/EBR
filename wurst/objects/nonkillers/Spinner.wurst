package Spinner
import Entity
import LinkedList
import SetupObject
import Texttag
import Remove
import BomberTarget
import Preloader
import BaseObject
import Pointer

constant int SPINNER_ID      = 'h01M'
constant int SPELL_ID        = 'A01B'
constant int SPELL2_ID       = 'A04M'
constant int INC_ID          = 'A01F'
constant int DEC_ID          = 'A01G'	
constant int CINC_ID          = 'A06K'
constant int CDEC_ID          = 'A06L'	
constant int SINC_ID          = 'A06M'
constant int SDEC_ID          = 'A06N'	

class SpinNode
	DynamicSetupObject obj
	real angl
	real dist
	
	construct(DynamicSetupObject ent, real ang, real dist)
		obj = ent
		angl = ang
		this.dist = dist
	
	ondestroy
		obj.setup.addAbility(REMOVE_ID)

public class Spinner extends DynamicSetupObject
	LinkedList<SpinNode> spinningEntities = new LinkedList<SpinNode>()
	real speed = 2. *DEGTORAD
	real cosFactor = 1.
	real sinFactor = 1.

	construct(vec2 pos, player owner)
		super(pos.toVec3(), CreateUnit(owner, SPINNER_ID, pos.x, pos.y, 0), CreateUnit(owner, SPINNER_ID, pos.x, pos.y, 0), 0, CODE_NULL)
		actor.addAbility(LOCUST_ID)
		EventListener.add(setup, EVENT_PLAYER_UNIT_SPELL_CAST, () -> onCast())
		
	override function update()
		super.update()
		for node in spinningEntities
			node.obj.setXY( vec3(pos.x + node.dist * Cos(node.angl+speed) * cosFactor,
									pos.y + node.dist * Sin(node.angl+speed) * sinFactor, 0. ) )
			node.angl += speed
			
	function checkObj(Entity e)
		if e instanceof DynamicSetupObject
			var dobj = e castTo DynamicSetupObject
			boolean isNew = true
			int i = 0
			for node in spinningEntities
				if node.obj == dobj
					isNew = false
					node.obj.setup.addAbility(REMOVE_ID)
					destroy spinningEntities.get(i)
					spinningEntities.removeAt(i)
					break
				i++
			if isNew and (dobj.setup.hasAbility(REMOVE_ID) or dobj.owner == Player(11))
				dobj.setup.removeAbility(REMOVE_ID)
				dobj.updatePos()
				spinningEntities.add(new SpinNode(dobj, pos.angleTo2d(dobj.pos).radians(), pos.distanceTo(dobj.pos) ))

	ondestroy
		while spinningEntities.getSize() > 0
			SpinNode n = spinningEntities.get(0)
			spinningEntities.removeAt(0)
			destroy n 
		destroy spinningEntities
				
	

	function onCast() returns boolean
		let id = GetSpellAbilityId()
		switch id
			case SPELL_ID
				var u = GetSpellTargetUnit()
				var data = u.getUserData() castTo UnitEntity
				if owner == owner
					checkObj(data)
			case SPELL2_ID
				var tx = GetSpellTargetX()
				var ty = GetSpellTargetY()
				GroupEnumUnitsInRange(ENUM_GROUP, tx, ty, 300., null)
				for gu in ENUM_GROUP
					if gu != actor and gu != setup
						if gu.getUserData() > 0
							var ed = gu.getEntity()
							if ed.owner == owner
								checkObj(gu.getEntity())
				ENUM_GROUP.clear()
			case INC_ID
				if speed < 10.
					speed += (.5*DEGTORAD)
					createTTEx(pos, vec2(0,0.05), "Spin-Speed: "+ R2SW(speed*RADTODEG,1,2), 10,  2., colorA(255,255,255,0), owner  )
				else
					createTTEx(pos, vec2(0,0.05), "Maximum Speed", 10,  2., colorA(255,255,255,0), owner  )
			case DEC_ID
				if speed > -10.
					speed -= (.5*DEGTORAD)
					createTTEx(pos, vec2(0,0.05), "Spin-Speed: "+ R2SW(speed*RADTODEG,1,2), 10,  2., colorA(255,255,255,0), owner  )
				else
					createTTEx(pos, vec2(0,0.05), "Minimum Speed", 10,  2., colorA(255,255,255,0), owner  )
			case CINC_ID
				if cosFactor < .95
					cosFactor += .1
					createTTEx(pos, vec2(0,0.05), "Cos-Factor: "+ R2SW(cosFactor,1,2), 10,  2., colorA(255,255,255,0), owner  )
				else
					createTTEx(pos, vec2(0,0.05), "Maximum Factor", 10,  2., colorA(255,255,255,0), owner  )
			case CDEC_ID
				if cosFactor > 0.05
					cosFactor -= (.1)
					createTTEx(pos, vec2(0,0.05), "Cos-Factor: "+ R2SW(cosFactor,1,2), 10,  2., colorA(255,255,255,0), owner  )
				else
					createTTEx(pos, vec2(0,0.05), "Minimum Factor", 10,  2., colorA(255,255,255,0), owner  )
			case SINC_ID
				if sinFactor < .95
					sinFactor += .1
					createTTEx(pos, vec2(0,0.05), "Sin-Factor: "+ R2SW(sinFactor,1,2), 10,  2., colorA(255,255,255,0), owner  )
				else
					createTTEx(pos, vec2(0,0.05), "Maximum Factor", 10,  2., colorA(255,255,255,0), owner  )
			case SDEC_ID
				if sinFactor > 0.05
					sinFactor -= (.1)
					createTTEx(pos, vec2(0,0.05), "Sin-Factor: "+ R2SW(sinFactor,1,2), 10,  2., colorA(255,255,255,0), owner  )
				else
					createTTEx(pos, vec2(0,0.05), "Minimum Factor", 10,  2., colorA(255,255,255,0), owner  )
		//setup.issuePastOrder(2)
		return false
	
init
	preloadAbility(SPELL_ID)
	preloadAbility(SPELL2_ID)
	preloadAbility(INC_ID)
	preloadAbility(DEC_ID)
		
