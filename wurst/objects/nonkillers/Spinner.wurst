package Spinner
import Entity
import LinkedList
import EventHandling
import SetupObject


constant int SPINNER_ID      = 'h01M'
constant int SPELL_ID        = 'A01B'
constant int SPELL2_ID       = 'A04M'
constant int INC_ID          = 'A01F'
constant int DEC_ID          = 'A01G'

class SpinNode
	DynamicSetupObject obj
	real angle
	real dist
	
	construct(DynamicSetupObject ent, real angl, real dist)
		obj = ent
		angle = angl
		this.dist = dist

public class Spinner extends UnitEntity
	LinkedList<SpinNode> spinningEntities = new LinkedList<SpinNode>()
	real speed = 2.

	construct(vec2 pos, player owner)
		super(pos.toVec3(), 0., CreateUnit(owner, SPINNER_ID, pos.x, pos.y, 0))
		actor.registerCastEvent(Condition(function onCast))
		
		
	override function update()
		super.update()
		real angle
		real dist
		for node in spinningEntities
			node.obj.setNewXY( vec3(polarProjectionXR(position.x, node.dist, node.angle+speed*DEGTORAD), polarProjectionYR(position.y, node.dist, node.angle+speed*DEGTORAD), 0. ) )
			node.angle += speed*DEGTORAD
			
	function checkObj(Entity e)
		if e instanceof DynamicSetupObject
			var dobj = e castTo DynamicSetupObject
			boolean isNew = true
			int i = 0
			for node in spinningEntities
				if node.obj == dobj
					isNew = false
					destroy spinningEntities.get(i)
					spinningEntities.removeAt(i)
					break
				i++
			if isNew
				spinningEntities.add(new SpinNode(dobj, angleBetweenCoordsR(position.x, position.y, dobj.position.x, dobj.position.y), distanceBetweenCoords(position.x, position.y, dobj.position.x, dobj.position.y) ))
			

/*	ondestroy
		while spinningEntities.size > 0
			 SpinNode n = spinningEntities.get(0)
			 spinningEntities.removeAt(0)
			 destroy n */
				
	

	static function onCast() returns boolean
		var id = GetSpellAbilityId()
		var sdata = GetTriggerUnit().getUserData() castTo Spinner
		switch id
			case SPELL_ID
				var u = GetSpellTargetUnit()
				var data = u.getUserData() castTo Entity
				sdata.checkObj(data)
			case SPELL2_ID
				var tx = GetSpellTargetX()
				var ty = GetSpellTargetY()
				GroupEnumUnitsInRange(ENUM_GROUP, tx, ty, 300., null)
				for gu in ENUM_GROUP
					if gu != sdata.actor
						if gu.getUserData() > 0
							sdata.checkObj(gu.getUserData() castTo Entity)
				ENUM_GROUP.clear()

		return false
	
		
