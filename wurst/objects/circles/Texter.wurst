package Texter
import BaseObject
import Escaper
import StringUtils
import Decoration

constant INFO_TEXTER_ID = compiletime(ABIL_ID_GEN.next())
constant EVENT_RADIUS 	= 32.

string array stdcolors

public class Texter extends StaticBaseObject
	FText text
	boolean hidden = true
	color col = color(255,255,255)
	
	construct(vec2 pos, player owner)
		super(pos, getUnit(owner, TEXTER_ID, pos, angle(0), this), EVENT_RADIUS, function Texter.onStep, CODE_NULL) 
		setEnabled(false)
		text = createCenterFText(actor.getPos3Zero(), "", 12)
		text.tt..setColor(col.red,col.green,col.blue, 0)..setVisibility(false)

	function show()
		text.tt.setVisibility(true)
		hidden = false
		createFText(pos, vec2(0,0.05), "Shown", 10,  2., colorA(255,255,255,0), owner)

	function hide()
		text.tt.setVisibility(false)
		hidden = true
		createFText(pos, vec2(0,0.05), "Hidden", 10,  2., colorA(255,255,255,0), owner)

	static function onStep()
		unit u = GetTriggerUnit()
		Entity e = u.getEntity()
		thistype obj = GetTriggeringTrigger().getSource().getUserData() castTo thistype
		if e instanceof Escaper
			obj.text.tt.setVisibility(true)
			obj.hidden = false
			
	static function onShow()
		for u from getSelected(GetTriggerPlayer())
			let ent = u.getEntity()
			if ent instanceof Texter
				thistype obj = u.getUserData() castTo thistype
				obj.show()
	
	static function onHide()
		for u from getSelected(GetTriggerPlayer())
			let ent = u.getEntity()
			if ent instanceof Texter
				thistype obj = u.getUserData() castTo thistype
				obj.hide()
	
	static function setText()
		string chatmsg = GetEventPlayerChatString()
		string ttext = ""
		if SubString(chatmsg, 0, 4) == "-st "
			ttext = SubString(chatmsg, 4, StringLength(chatmsg))
		for u from getSelected(GetTriggerPlayer())
			let ent = u.getEntity()
			if ent instanceof Texter
				thistype obj = u.getUserData() castTo thistype
				obj.clearQuestionmark()
				obj.text.tt.center(obj.getPos(), ttext, 10)
				if obj.hidden
					createFText(obj.pos, vec2(0,0.05), ttext, 10,  2., colorA(255,255,255,0), obj.owner)
	
	static function setColor()
		string chatmsg = GetEventPlayerChatString()
		color textcolor = color(255,255,255)
		if SubString(chatmsg, 0, 4) == "-sc "
			textcolor = getColorFromString(SubString(chatmsg, 4, StringLength(chatmsg)) + " ")
		for u from getSelected(GetTriggerPlayer())
			let ent = u.getEntity()
			if ent instanceof Texter
				let obj = u.getUserData() castTo Texter
				if obj.col != textcolor
					obj.col = textcolor
					obj.text.tt.setColor(obj.col.red,obj.col.green,obj.col.blue, 0 )
					createFText(obj.pos, vec2(0,0.05), "Color Set", 10,  2., obj.col.withAlpha(0), obj.owner  )
			else if ent instanceof Decoration
				let obj = u.getUserData() castTo Decoration
				obj.actor.setVertexColor(textcolor)
			else if ent instanceof SetupObject
				let obj = u.getUserData() castTo SetupObject
				obj.actor.setVertexColor(textcolor)
				obj.setup.setVertexColor(textcolor)

	ondestroy
		destroy text

	override function serialize() returns Json
		let json = super.serialize()
		json..addProperty(new Property(KEY_TYPE, TEXTER_INDEX.toString()))
		return json

	override function activate()
		show()

	override function deactivate()
		super.deactivate()
		hide()
	
function getSelected(player p) returns group
	GroupEnumUnitsOfPlayer(ENUM_GROUP, p, null)
	for u in ENUM_GROUP
		if not IsUnitSelected( u, p)
			ENUM_GROUP.removeUnit(u)
	return ENUM_GROUP

function getColorFromString(string s) returns color
	boolean isstdcolor = false
	color stringcolor = color(255,255,255)
	for int i = 1 to 12
		if stdcolors[i]+ " " == s 
			stringcolor = playercolors[i-1]
			isstdcolor = true
	if not isstdcolor
		int component = 0
		string tempstring = ""
		for int ii = 0 to StringLength( s ) - 1
			if SubString( s, ii, ii + 1 ) != " " 
				tempstring += SubString( s, ii, ii + 1 )
			else
				switch component
					case 0
						stringcolor.red = S2I(tempstring)
					case 1
						stringcolor.green = S2I(tempstring)
					case 2
						stringcolor.blue = S2I(tempstring)
				component++
				tempstring = ""
	return stringcolor


@init1 function init_Texter()
	trigger textrig = CreateTrigger()
	trigger coltrig = CreateTrigger()
	trigger shotrig = CreateTrigger()
	trigger hidtrig = CreateTrigger()
	for int i = 0 to 11
		TriggerRegisterPlayerChatEvent(textrig,Player(i), "-st ", false)
		TriggerRegisterPlayerChatEvent(coltrig,Player(i), "-sc ", false)
		TriggerRegisterPlayerChatEvent(shotrig,Player(i), "-sht", true)
		TriggerRegisterPlayerChatEvent(hidtrig,Player(i), "-ht", true)
	TriggerAddAction(hidtrig, function Texter.onHide)
	TriggerAddAction(shotrig, function Texter.onShow)
	TriggerAddAction(coltrig, function Texter.setColor)
	TriggerAddAction(textrig, function Texter.setText)
	stdcolors[0] = "white"
	stdcolors[1] = "red"
	stdcolors[2] = "blue"
	stdcolors[3] = "teal"
	stdcolors[4] = "purple"
	stdcolors[5] = "yellow"
	stdcolors[6] = "orange"
	stdcolors[7] = "green"
	stdcolors[8] = "pink"
	stdcolors[9] = "gray"
	stdcolors[10] = "lightblue"
	stdcolors[11] = "darkgreen"
	stdcolors[12] = "brown"
		

@objectgen function genTexter()
	new ChannelAbilityPreset(INFO_TEXTER_ID, 1, TRUE)
	..setName("Information: Texter")
	..presetTooltipNormal((int lvl) -> "Information: Texter")
	..presetTooltipNormalExtended((int lvl) -> "Use these commands while having the texter selected." +
	"\nAll Commands:" + 
	"\n-sht (shows the currently set text)" +
	"\n-ht (hides the currently set text)" +
	"\n-sc (set the color of the text)" +
	"\nExamples:" + 
	"\n-st Some Text" +
	"\n-sc red/green/orange" +
	"\n-sc 125 125 255" +
	"\nThe text gets automatically displayed if an Escaper walks over the texter.")
	..presetIcon("ReplaceableTextures\\CommandButtons\\PASInfo.blp")
	..presetButtonPosNormal(0, 0)
	..presetTargetTypes(Targettype.PASSIVE)
	..setHeroAbility(FALSE)

	new BuildingDefinition(TEXTER_ID, 'ncop')
	..setName("|cff08DEFFTexter ")
	..setHotkey("F")
	..setTooltipBasic("|cffFFCC00Build |cff08DEFFTexter [F]")
	..setTooltipExtended("Creates floating textes that are shown by command or when an Escaper walks over it." +
	"\nFloating texts can be colored.")
	..setIconGameInterface("ReplaceableTextures\\CommandButtons\\BTNTexter.blp")
	..setNormalAbilities(int2fourchar(INFO_TEXTER_ID) + "," +
	int2fourchar(REMOVE_OBJECT_ID) + "," +
	int2fourchar(MAKE_UNIT_INVISIBLE_ID) + "," +
	int2fourchar(GHOST_VIS_ID) + "," +
	int2fourchar(INVULNERABILITY_ID))
	..setButtonPositionX(3)
	..setButtonPositionY(1)
	..setTintingColorRed(0)
	..setSightRadiusDay(0)
	..setSightRadiusNight(0)
	..setBuildTime(1)
	..setCollisionSize(0)        
	..setScalingValue(0.8)
	..setSelectionScale(2.2)
	..setUnitClassification("ancient,standon")   