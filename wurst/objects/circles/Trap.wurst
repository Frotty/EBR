package Trap
import BaseObject
import Escaper
import InstantDummyCaster
import Camerashakes
import TerrainBlocker

constant int TRAP_ID = 'n00I'
constant string POISON_EFFECT = "Abilities\\Weapons\\PoisonSting\\PoisonStingTarget.mdl" 
constant real EVENT_RADIUS = 64.
constant SPECIAL_ID = 'A07V'

string array SFX_STRINGS
enum ABIL
	KILL
	STUN
	POISON
	SPEED
	KNOCK
	SHAKE
	
public class Trap extends StaticBaseObject
	int sfxid = 3
	real interval = 2.
	real timerreal = 0.
	ABIL a
	
	real duration //Shake,  Speed, Stun
	real value // Shake, Knockback, Speed
	boolean pull = false
	int uptimes = 0
	int goocounter = 0
	private image array[5] goos
	construct( vec2 pos, player owner )
		super(pos, CreateUnit( owner, TRAP_ID, pos.x, pos.y, 0.  ) , EVENT_RADIUS, function onStep, CODE_NULL)
		
		EventListener.add(actor, EVENT_PLAYER_UNIT_SPELL_CAST, () -> onCast())
			
	static function onStep()
		unit source = GetTriggeringTrigger().getSource()
		unit u = GetTriggerUnit()
		Entity e = u.getEntity()
		thistype obj = source.getUserData() castTo thistype
		
		if not obj.active and e instanceof Escaper
			DestroyEffect(AddSpecialEffect(SFX_STRINGS[obj.sfxid],obj.actor.getX(),obj.actor.getY() ))
			var escaper = e castTo Escaper
			obj.doEffect(escaper)
	
	function canTrigger(Entity e) returns boolean
		return false
	
	ondestroy 
		for i = 0 to 4
			if goos[i] != null
				goos[i].remove()
				
	override function update()
		super.update()
		if active
			if timerreal <= 0.0
				DestroyEffect(AddSpecialEffect(SFX_STRINGS[sfxid],actor.getX(),actor.getY() ))
				GroupEnumUnitsInRange(ENUM_GROUP,actor.getX(), actor.getY(), EVENT_RADIUS, null)
				for unit u in ENUM_GROUP
					Entity e = u.getEntity()
					if e instanceof Escaper
						var escaper = e castTo Escaper
						doEffect(escaper)
				ENUM_GROUP.clear()
				timerreal = interval
			else
				timerreal -= ANIMATION_PERIOD
				
	function doEffect(Escaper e)
		switch a
			case ABIL.KILL
				e.kill()
			case ABIL.STUN
				InstantDummyCaster.castTarget(DUMMY_PLAYER, STUN_BUFF, duration.toInt(), "thunderbolt", e.actor)
			case ABIL.SHAKE
				newEventPlayer(e.owner,value)
				//setCameraNoiseTimed(e.owner, value, 1000, duration)
			case ABIL.POISON
				e.setPoison(true)
			case ABIL.SPEED
				int level = (value/20).toInt() mod 10
				printLog(Loglevel.TRACE, "Level: " + level.toString())
				if level > 5
					InstantDummyCaster.castTarget(DUMMY_PLAYER, SPEED_BUFF_POS, level-5, "bloodlust", e.actor)
				else if level < 5
					InstantDummyCaster.castTarget(DUMMY_PLAYER, SPEED_BUFF_NEG, level, "bloodlust", e.actor)
			case ABIL.KNOCK
				IssueImmediateOrder(e.actor, "stop")
				let rallyPos = getRallyPoint()
				angle angl
				if rallyPos.distanceTo2dSq(pos.toVec2()) < 20*20
					if pull
						angl = pos.angleTo2d(e.pos) - (180).asAngleDegrees()
					else
						angl = pos.angleTo2d(e.pos)
				else	
					angl = pos.angleTo2d(rallyPos)
					
				e.addVel(angl.toVec(value).toVec3())
			default
		
		
	function addConfiger(boolean dur, boolean val)
		UnitRemoveAbility(actor,KILL_ABIL)
		UnitRemoveAbility(actor,STUN_ABIL)
		UnitRemoveAbility(actor,SHAKE_ABIL)
		UnitRemoveAbility(actor,SPEED_ABIL)
		UnitRemoveAbility(actor,KNOCK_ABIL)
		UnitRemoveAbility(actor,POISON_ABIL)
		UnitAddAbility(actor,INCREASE_INTERVAL_ABIL)
		UnitAddAbility(actor,DECREASE_INTERVAL_ABIL)
		UnitAddAbility(actor,START_ABIL)
		UnitAddAbility(actor,NEXT_SFX_ABIL)
		UnitAddAbility(actor,PREV_SFX_ABIL)
		if dur
			UnitAddAbility(actor,INCREASE_DURATION_ABIL)
			UnitAddAbility(actor,DECREASE_DURATION_ABIL)
		if val
			UnitAddAbility(actor,INCREASE_VALUE_ABIL)
			UnitAddAbility(actor,DECREASE_VALUE_ABIL)
		if noRally != null
			noRally.destr()
			noRally = null
	
	function onCast() returns boolean
		let spell_id = GetSpellAbilityId()
		switch spell_id
			case NEXT_SFX_ABIL
				if sfxid >= SFX_COUNT
					sfxid = 0
				else
					sfxid ++
				if sfxid < SFX_COUNT
					DestroyEffect(AddSpecialEffect(SFX_STRINGS[sfxid],actor.getX(),actor.getY() ))
				else
					createTTEx(pos, vec2(0,0.05), "|cffC51019No Effect", 14,  2., colorA(255,255,255,0), owner  )
			case PREV_SFX_ABIL
				if sfxid <= 0
					sfxid = SFX_COUNT
				else
					sfxid --
				if sfxid < SFX_COUNT
					DestroyEffect(AddSpecialEffect(SFX_STRINGS[sfxid],actor.getX(),actor.getY() ))
				else
					createTTEx(pos, vec2(0,0.05), "|cffC51019No Effect", 14,  2., colorA(255,255,255,0), owner  )
			
			case KILL_ABIL
				a = ABIL.KILL
				addConfiger(false, false)
			case STUN_ABIL
				a = ABIL.STUN
				duration = 1.
				addConfiger(true, false)
			case SPEED_ABIL
				//createTTEx(pos, vec2(0,0.05), "|cffC51019Not implemented yet", 10,  2., colorA(255,255,255,0), owner  )
				a = ABIL.SPEED
				value = 120.
				duration = 1.
				addConfiger(false, true)
			case SHAKE_ABIL
				a = ABIL.SHAKE
				value = 500
				duration = 3.
				addConfiger(true, true)
			case KNOCK_ABIL
				a = ABIL.KNOCK
				value = 10.
				actor.addAbility('ARal')
				actor.addAbility(PULL_ID)
				addConfiger(false, true)
			case POISON_ABIL
				a = ABIL.POISON
				addConfiger(false, false)
					
			case INCREASE_INTERVAL_ABIL
				if interval >= 10
					createTTEx(pos, vec2(0,0.05), "|cffC51019Max", 10,  2., colorA(255,255,255,0), owner  )
				else
					interval += 0.25
					createTTEx(pos, vec2(0,0.05), "|cffC51019Intervall "+ R2SW(interval,1,2), 10,  2., colorA(255,255,255,0), owner  )
			case DECREASE_INTERVAL_ABIL
				if interval < 0.75
					createTTEx(pos, vec2(0,0.05), "|cffC51019Min", 10,  2., colorA(255,255,255,0), owner  )
				else
					interval -= 0.25
					createTTEx(pos, vec2(0,0.05), "|cffC51019Intervall "+ R2SW(interval,1,2), 10,  2., colorA(255,255,255,0), owner  )
			
			case INCREASE_VALUE_ABIL
				switch a
					case ABIL.KNOCK
						if value >= 200
							createTTEx(pos, vec2(0,0.05), "|cffC51019Max Force", 10,  2., colorA(255,255,255,0), owner  )
						else
							value += 5
							createTTEx(pos, vec2(0,0.05), "|cffC51019Force "+ R2SW(value,1,0), 10,  2., colorA(255,255,255,0), owner  )
					case ABIL.SHAKE
						if value >= 1500
							createTTEx(pos, vec2(0,0.05), "|cffC51019Intensity Max", 10,  2., colorA(255,255,255,0), owner  )
						else
							value += 100
							createTTEx(pos, vec2(0,0.05), "|cffC51019Intensity "+ R2SW(value,1,0), 10,  2., colorA(255,255,255,0), owner  )
					case ABIL.SPEED
						if value >= 180
							uptimes++
							createTTEx(pos, vec2(0,0.05), "|cffC51019Max Speed", 10,  2., colorA(255,255,255,0), owner  )
						else
							value += 20
							createTTEx(pos, vec2(0,0.05), "|cffC51019Speed Bonus "+ R2SW(value,1,0)+"%", 10,  2., colorA(255,255,255,0), owner  )
						if uptimes > 10
							uptimes = -99999999
							printTimedToPlayer("|cff08C5E6Relax|r, it's already |cffCE2919max|r... |cffFF7B29But maybe this will help you!", 20, owner)
							actor.addAbility(SPECIAL_ID)
					default
						skip
			case DECREASE_VALUE_ABIL
				switch a
					case ABIL.KNOCK
						if value <= 5
							createTTEx(pos, vec2(0,0.05), "|cffC51019Min Force", 10,  2., colorA(255,255,255,0), owner  )
						else
							value -= 5
							createTTEx(pos, vec2(0,0.05), "|cffC51019Force "+ value.toInt().toString(), 10,  2., colorA(255,255,255,0), owner  )
					case ABIL.SHAKE
						if value <= 100
							createTTEx(pos, vec2(0,0.05), "|cffC51019Min Intensity", 10,  2., colorA(255,255,255,0), owner  )
						else
							value -= 100
							createTTEx(pos, vec2(0,0.05), "|cffC51019Intensity "+ value.toInt().toString(), 10,  2., colorA(255,255,255,0), owner  )
					case ABIL.SPEED
						if value <= 20
							createTTEx(pos, vec2(0,0.05), "|cffC51019Min Speed", 10,  2., colorA(255,255,255,0), owner  )
						else
							value -= 20
							createTTEx(pos, vec2(0,0.05), "|cffC51019Speed Bonus "+ value.toInt().toString()+"%", 10,  2., colorA(255,255,255,0), owner  )
					default
						skip
			
			case INCREASE_DURATION_ABIL
				switch a
					case ABIL.STUN
						if duration >= 4
							createTTEx(pos, vec2(0,0.05), "|cffC51019Max Duration", 10,  2., colorA(255,255,255,0), owner  )
						else
							duration += 1
							createTTEx(pos, vec2(0,0.05), "|cffC51019Duration "+ R2SW(duration,1,0), 10,  2., colorA(255,255,255,0), owner  )
					case ABIL.SHAKE
						if duration >= 5
							createTTEx(pos, vec2(0,0.05), "|cffC51019Max Duration", 10,  2., colorA(255,255,255,0), owner  )
						else
							duration += 1
							createTTEx(pos, vec2(0,0.05), "|cffC51019Duration "+ R2SW(duration,1,0), 10,  2., colorA(255,255,255,0), owner  )
					case ABIL.SPEED
						if duration >= 20
							createTTEx(pos, vec2(0,0.05), "|cffC51019Max Duration", 10,  2., colorA(255,255,255,0), owner  )
						else
							duration += 1
							createTTEx(pos, vec2(0,0.05), "|cffC51019Duration "+ R2SW(duration,1,0), 10,  2., colorA(255,255,255,0), owner  )
					default
						skip	
			case DECREASE_DURATION_ABIL
				switch a
					case ABIL.STUN
						if duration <= 1
							createTTEx(pos, vec2(0,0.05), "|cffC51019Min Duration", 10,  2., colorA(255,255,255,0), owner  )
						else
							duration -= 1
							createTTEx(pos, vec2(0,0.05), "|cffC51019Duration "+ R2SW(duration,1,0), 10,  2., colorA(255,255,255,0), owner  )
					case ABIL.SHAKE
						if duration <= 1
							createTTEx(pos, vec2(0,0.05), "|cffC51019Min Duration", 10,  2., colorA(255,255,255,0), owner  )
						else
							duration -= 1
							createTTEx(pos, vec2(0,0.05), "|cffC51019Duration "+ R2SW(duration,1,0), 10,  2., colorA(255,255,255,0), owner  )
					case ABIL.SPEED
						if duration <= 1
							createTTEx(pos, vec2(0,0.05), "|cffC51019Min Duration", 10,  2., colorA(255,255,255,0), owner  )
						else
							duration -= 1
							createTTEx(pos, vec2(0,0.05), "|cffC51019Duration "+ R2SW(duration,1,0), 10,  2., colorA(255,255,255,0), owner  )
					default
						skip
			
			case START_ABIL
				activate()
				UnitRemoveAbility(actor,START_ABIL)
				UnitAddAbility(actor,STOP_ABIL)
			case STOP_ABIL
				deactivate()
				timerreal = 0.
				UnitRemoveAbility(actor,STOP_ABIL)
				UnitAddAbility(actor,START_ABIL)
			case PULL_ID
				pull = true
				actor.removeAbility(PULL_ID)
				actor.addAbility(PUSH_ID)
			case PUSH_ID
				pull = false
				actor.removeAbility(PUSH_ID)
				actor.addAbility(PULL_ID)
			case SPECIAL_ID
				if goocounter < 5
					let x = (GetSpellTargetX()/128).round()
					let y = (GetSpellTargetY()/128).round()
					let goo = createImage("textures\\orangegoo.blp", vec2(x*128., y*128.), 128, 128)
					..show()
					goos[goocounter] = goo
					goocounter++
					tileModifierMap.saveInt(x,y,bitset(tileModifierMap.loadInt(x, y)).add(TileModifiers.ORANGEGOO castTo int).val )
		return false
		
constant int NEXT_SFX_ABIL = 'A06D'
constant int PREV_SFX_ABIL = 'A06C'

constant int INCREASE_DURATION_ABIL = 'A026'
constant int DECREASE_DURATION_ABIL = 'A025'
constant int INCREASE_VALUE_ABIL = 'A023'
constant int DECREASE_VALUE_ABIL = 'A01S'

constant int KILL_ABIL = 'A06E'
constant int STUN_ABIL = 'A06G'
constant int SPEED_ABIL = 'A06I'
constant int SHAKE_ABIL = 'A033'
constant int KNOCK_ABIL = 'A06H'
constant int POISON_ABIL = 'A06F'

constant int STUN_BUFF = 'A06J'
constant int SPEED_BUFF_NEG = 'A03J'
constant int SPEED_BUFF_POS = 'A03I'

constant int INCREASE_INTERVAL_ABIL = 'A02O'
constant int DECREASE_INTERVAL_ABIL = 'A02Q'
constant int START_ABIL = 'A02T'
constant int STOP_ABIL = 'A02U'

constant int PULL_ID = 'A074'
constant int PUSH_ID = 'A075'

constant SFX_COUNT = 9

public function init_Trap()
	SFX_STRINGS[0] = "Abilities\\Spells\\Undead\\AnimateDead\\AnimateDeadTarget.mdl"
	SFX_STRINGS[1] = "Abilities\\Spells\\Undead\\FrostNova\\FrostNovaTarget.mdl"
	SFX_STRINGS[2] = "Abilities\\Spells\\Undead\\Impale\\ImpaleMissTarget.mdl"
	SFX_STRINGS[3] = "Abilities\\Spells\\Other\\Doom\\DoomDeath.mdl"
	SFX_STRINGS[4] = "Abilities\\Spells\\Human\\ManaFlare\\ManaFlareBoltImpact.mdl"
	SFX_STRINGS[5] = "Abilities\\Spells\\Other\\Monsoon\\MonsoonBoltTarget.mdl"
	SFX_STRINGS[6] = "Abilities\\Spells\\Other\\Volcano\\VolcanoDeath.mdl"
	SFX_STRINGS[7] = "Abilities\\Spells\\Demon\\DarkPortal\\DarkPortalTarget.mdl"
	SFX_STRINGS[8] = "Objects\\Spawnmodels\\NightElf\\NEDeathSmall\\NEDeathSmall.mdl"
	SFX_STRINGS[9] = ""
	
