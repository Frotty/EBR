package Trap
import BaseObject
import Escaper
import GroupUtils
import Knockback
import EventHandling

constant int TRAP_ID = 'n00I'
string array SFX_STRINGS
enum ABIL
	KILL
	STUN
	POISON
	SPEED
	KNOCK
	SHAKE
	
public class Trap extends StaticBaseObject
	int sfxid = 3
	boolean onstep = true
	real interval
	timer traptimer
	ABIL a
	
	real duration //Shake,  Speed, Stun
	real value // Shake, Knockback, Speed
	
	construct( vec2 pos, player owner )
			super(pos.toVec3(), CreateUnit( owner, TRAP_ID, pos.x, pos.y, 0.  ) , 50., function onStep)
			actor.registerCastEvent(Condition(function Trap.onCast))
			actor.setUserData(this castTo int)
			traptimer = getTimer()
			DestroyEffect(AddSpecialEffect(SFX_STRINGS[sfxid],actor.getX(),actor.getY() ))
			
	static function onStep()
		print("Trap step")
		unit source = GetTriggeringTrigger().getSource()
        unit u = GetTriggerUnit()
        Entity e = u.getUserData() castTo Entity
        thistype obj = source.getUserData() castTo thistype
		
		if obj.onstep and e instanceof Escaper
			DestroyEffect(AddSpecialEffect(SFX_STRINGS[obj.sfxid],obj.actor.getX(),obj.actor.getY() ))
			var escaper = e castTo Escaper
			obj.doEffect(escaper)
	
	function canTrigger(Entity e) returns boolean
		return false
	
	static function onPeriod() //periodic
		thistype obj = GetExpiredTimer().getData() castTo thistype
		GroupEnumUnitsInRange(ENUM_GROUP,obj.actor.getX(), obj.actor.getY(), 30., null)
		int c = 0
		for unit u from ENUM_GROUP
            Entity e = u.getUserData() castTo Entity
            if e instanceof Escaper
                var escaper = e castTo Escaper
                obj.doEffect(escaper)
        ENUM_GROUP.clear()
			
	function doEffect(Escaper e)
		print("Trap Effect")
		switch a
			case ABIL.KILL
				e.kill()
			case ABIL.KNOCK
				IssueImmediateOrder(e.actor, "stop")
				var angle = angleBetweenCoordsD(actor.getX(), actor.getY(),e.actor.getX(), e.actor.getY())
				e.addForce( value * Cos(angle * DEGTORAD),value * Sin(angle * DEGTORAD),10.)
				print("fork you")
				//new Knockback( actor, e.actor, value, 0.5,  )
			default
				skip
		
	static function endStun()
		Escaper e = GetExpiredTimer().getData() castTo Escaper
		if UnitHasBuffBJ(e.actor, STUN_BUFF)
			PauseUnit(e.actor, false)
		
	function addConfiger(boolean dur, boolean val)
		UnitRemoveAbility(actor,KILL_ABIL)
		UnitRemoveAbility(actor,STUN_ABIL)
		UnitRemoveAbility(actor,SHAKE_ABIL)
		UnitRemoveAbility(actor,SPEED_ABIL)
		UnitRemoveAbility(actor,KNOCK_ABIL)
		UnitRemoveAbility(actor,POISON_ABIL)
		UnitAddAbility(actor,INCREASE_INTERVAL_ABIL)
		UnitAddAbility(actor,DECREASE_INTERVAL_ABIL)
		UnitAddAbility(actor,START_ABIL)
		UnitAddAbility(actor,NEXT_SFX_ABIL)
		UnitAddAbility(actor,PREV_SFX_ABIL)
		if dur
			UnitAddAbility(actor,INCREASE_DURATION_ABIL)
			UnitAddAbility(actor,DECREASE_DURATION_ABIL)
		if val
			UnitAddAbility(actor,INCREASE_VALUE_ABIL)
			UnitAddAbility(actor,DECREASE_VALUE_ABIL)
	
	static function onCast() returns boolean
		print("Trap Casting")
		unit source = GetSpellAbilityUnit()
        thistype obj = source.getUserData() castTo thistype
		int spell_id = GetSpellAbilityId()
		switch spell_id
			case NEXT_SFX_ABIL
				print(obj.sfxid.toString())
				if obj.sfxid >= 7
					obj.sfxid = 0
				else
					obj.sfxid ++
				DestroyEffect(AddSpecialEffect(SFX_STRINGS[obj.sfxid],obj.actor.getX(),obj.actor.getY() ))
			case PREV_SFX_ABIL
				print(obj.sfxid.toString())
				if obj.sfxid <= 0
					obj.sfxid = 7
				else
					obj.sfxid --
				DestroyEffect(AddSpecialEffect(SFX_STRINGS[obj.sfxid],obj.actor.getX(),obj.actor.getY() ))
			
			case KILL_ABIL
				obj.a = ABIL.KILL
				obj.addConfiger(false, false)
			case STUN_ABIL
				obj.a = ABIL.STUN
				obj.duration = 1.
				obj.addConfiger(true, false)
			case SPEED_ABIL
				obj.a = ABIL.SPEED
				obj.addConfiger(true, true)
			case SHAKE_ABIL
				obj.a = ABIL.SHAKE
				obj.addConfiger(true, true)
			case KNOCK_ABIL
				obj.a = ABIL.KNOCK
				obj.value = 2.
				obj.addConfiger(false, true)
			case POISON_ABIL
				obj.a = ABIL.POISON
				obj.addConfiger(false, false)
					
			case INCREASE_INTERVAL_ABIL
	            if obj.interval >= 10
	        		DisplayTextToPlayer( obj.owner, 0, 0, "|cffC51019Maximum intervall reached!")
				else
					obj.interval += 0.25
					DisplayTextToPlayer( obj.owner, 0, 0, "|cffC51019Intervall is now: "+ R2SW(obj.interval,1,2) )
			case DECREASE_INTERVAL_ABIL
	            if obj.interval < 0.75
	        		DisplayTextToPlayer( obj.owner, 0, 0, "|cffC51019Minimum intervall reached!")
				else
					obj.interval += 0.25
					DisplayTextToPlayer( obj.owner, 0, 0, "|cffC51019Intervall is now: "+ R2SW(obj.interval,1,2) )
			case START_ABIL
				obj.traptimer.startPeriodic(obj.interval, function onPeriod)
				UnitRemoveAbility(obj.actor,START_ABIL)
				UnitAddAbility(obj.actor,STOP_ABIL)
			case STOP_ABIL
				obj.traptimer.release()
				UnitRemoveAbility(obj.actor,STOP_ABIL)
				UnitAddAbility(obj.actor,START_ABIL)
		return false

int NEXT_SFX_ABIL = 'A06D'
int PREV_SFX_ABIL = 'A06C'

int INCREASE_DURATION_ABIL
int DECREASE_DURATION_ABIL
int INCREASE_VALUE_ABIL
int DECREASE_VALUE_ABIL

int KILL_ABIL = 'A06E'
int STUN_ABIL = 'A06G'
int SPEED_ABIL = 'A06I'
int SHAKE_ABIL = '0060'
int KNOCK_ABIL = 'A06H'
int POISON_ABIL = 'A06F'

int STUN_BUFF = 'BUFF'

int INCREASE_INTERVAL_ABIL = '0060'
int DECREASE_INTERVAL_ABIL = '0060'
int START_ABIL = '0060'
int STOP_ABIL = '0060'

public function init_Trap()
	SFX_STRINGS[0] = "Abilities\\Spells\\Undead\\AnimateDead\\AnimateDeadTarget.mdl"
	SFX_STRINGS[1] = "Abilities\\Spells\\Undead\\FrostNova\\FrostNovaTarget.mdl"
	SFX_STRINGS[2] = "Abilities\\Spells\\Undead\\Impale\\ImpaleMissTarget.mdl"
	SFX_STRINGS[3] = "Abilities\\Spells\\Other\\Doom\\DoomDeath.mdl"
	SFX_STRINGS[4] = "Abilities\\Spells\\Human\\ManaFlare\\ManaFlareBoltImpact.mdl"
	SFX_STRINGS[5] = "Abilities\\Spells\\Other\\Monsoon\\MonsoonBoltTarget.mdl"
	SFX_STRINGS[6] = "Abilities\\Spells\\Other\\Volcano\\VolcanoDeath.mdl"
	SFX_STRINGS[7] = "Abilities\\Spells\\Demon\\DarkPortal\\DarkPortalTarget.mdl"