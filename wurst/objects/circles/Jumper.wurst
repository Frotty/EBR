package Jumper
import Entity
import Escaper
import BaseObject
import Texttag 
import SoundUtils
import Image
import TerrainBlocker
constant int JUMPER_ID = 'n00B'
constant string EFFECT_STRING = "Abilities\\Spells\\Human\\FlakCannons\\FlakTarget.mdl"

constant int FORCED_ID = 'A070'
constant int UNFORCED_ID = 'A071'
constant int INCREASE_ID = 'A072'
constant int DECREASE_ID = 'A073'
constant SPECIAL_ID = 'A07O'

SoundDefinition snd = new SoundDefinition("Units\\Human\\Priest\\PriestPissed3.wav", 1039, false)

enum JumpMode
	FORCED
	UNFORCED

function filter() returns boolean
	return GetFilterUnit().getTypeId() == JUMPER_ID

public class Jumper extends StaticBaseObject
	private image array[5] goos
	private int goocounter = 0
	JumpMode mode = JumpMode.FORCED
	real speed = 10.
	
	construct(vec2 pos, player owner)
		super(pos, CreateUnit(owner, JUMPER_ID, pos.x, pos.y, 0. ), 40., function Jumper.inRange)
		EventListener.add(actor, EVENT_PLAYER_UNIT_SPELL_CAST, () -> onCast())
		GroupEnumUnitsInRange(ENUM_GROUP, pos.x, pos.y, 8, Filter(function filter))
		let u = ENUM_GROUP.next()
		let u2 = ENUM_GROUP.next()
		if u != null and u2 != null
			snd.play()
			if u == actor
				u2.addAbility(SPECIAL_ID)
			else
				u.addAbility(SPECIAL_ID)
			terminate()
		ENUM_GROUP.clear()
		
	static function inRange()
		var data = GetTriggerUnit().getEntity()
		var jdata = GetTriggeringTrigger().getSource().getUserData() castTo Jumper
		if data instanceof Escaper
			var edata = data castTo Escaper
			switch jdata.mode
				case JumpMode.FORCED
					edata.setPos(jdata.pos.add(0,0,1.))
					edata.sliding = false
					edata.slideVelocity = vec3(0,0,0)
					edata.setTarget(jdata.getRallyPoint(), jdata.speed)
					AddSpecialEffect(EFFECT_STRING, data.pos.x, data.pos.y).destr()
				case JumpMode.UNFORCED
					edata.addVel(vec3(0,0, jdata.speed) + edata.slideVelocity)
					edata.sliding = false
					edata.slideVelocity = vec3(0,0,0)
					AddSpecialEffect(EFFECT_STRING, data.pos.x, data.pos.y).destr()
					
				
	function onCast()
		let id = GetSpellAbilityId()
		switch id
			case FORCED_ID
				actor..removeAbility(FORCED_ID)..addAbility(UNFORCED_ID)
				mode = JumpMode.UNFORCED
			case UNFORCED_ID
				actor..removeAbility(UNFORCED_ID)..addAbility(FORCED_ID)
				mode = JumpMode.FORCED
			case DECREASE_ID
				if speed >5.
					speed -= 1.
					createTTEx(pos, vec2(0,0.05), "Speed: " + speed.toString(), 10,  2., colorA(255,255,255,0), owner  )
			case INCREASE_ID
				if speed < 35.
					speed += 1.
					createTTEx(pos, vec2(0,0.05), "Speed: " + speed.toString(), 10,  2., colorA(255,255,255,0), owner  )
			case SPECIAL_ID
				if goocounter < 5
					let x = (GetSpellTargetX()/128).round()
					let y = (GetSpellTargetY()/128).round()
					let goo = createImage("textures\\blugoo.blp", vec2(x*128., y*128.), 128, 128)
					..show()
					goos[goocounter] = goo
					goocounter++
					tileModifierMap.saveInt(x,y,bitset(tileModifierMap.loadInt(x, y)).add(TileModifiers.GOO castTo int).val )
				
	ondestroy
		for i = 0 to 4
			if goos[i] != null
				goos[i].remove()
		
