package UnitRemover
import BaseObject
import Obstacle
import Decoration

constant int ID = 'n003'

public class UnitRemover extends StaticBaseObject

	construct(unit existing)
		super(existing.getPos(), existing, 64., function UnitRemover.removeUnit, CODE_NULL )
		clearQuestionmark()

	construct( vec2 pos, player owner)
		super(pos, getUnit(owner, ID, pos, angle(0), this), 64., function UnitRemover.removeUnit, CODE_NULL)
		clearQuestionmark()

	static function removeUnit()
		var u = GetTriggerUnit()
		var data = u.getUserData()
		var sdata = GetTriggeringTrigger().getSource().getUserData() castTo UnitRemover
		if data > 0 and (data castTo Entity).owner == sdata.owner and u.hasAbility(REMOVE_ID)
			var edata = data castTo Entity
			if edata instanceof SetupObject and not edata instanceof Obstacle and not edata instanceof Decoration
				edata.terminate()
	
	override function serialize() returns Json
		let json = super.serialize()
		json..addProperty(new Property(KEY_TYPE, UNITREMOVER_INDEX.toString()))
		return json
