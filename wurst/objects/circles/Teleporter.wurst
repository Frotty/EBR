package Teleporter
import BaseObject
import PlayerData
import EscaperSensor

constant TELEPORTER_ID   = 'n00C'
constant EFFECT_STRING   = "Abilities\\Spells\\NightElf\\Blink\\BlinkCaster.mdl"
constant ESC_ID = 'A009'
constant KILL_ID = 'A012'
constant BOTH_ID = 'A014'

constant EVENT_RADIUS	= 32.

enum TeleportMode
	ESCAPER
	KILLER
	BOTH

public class Teleporter extends StaticBaseObject
	boolean teleportWisps = false
	TeleportMode mode = TeleportMode.ESCAPER
	
	construct( vec2 pos, player owner )
		super( pos, createUnit(owner, TELEPORTER_ID, pos, angle(0) ), EVENT_RADIUS, function Teleporter.teleport, CODE_NULL ) 
		EventListener.add(actor, EVENT_PLAYER_UNIT_SPELL_CAST, () -> onCast())
		
	static function teleport()
		unit source = GetTriggeringTrigger().getSource()
		unit u = GetTriggerUnit()
		Entity e = u.getEntity()
		thistype obj = source.getUserData() castTo thistype
		let rallyPos = obj.getRallyPoint()
		let rdata = getRegionData(rallyPos)
		SetupObject dyn
		switch obj.mode
			case TeleportMode.ESCAPER
				if e instanceof Escaper
					e.setPos(rallyPos)
					addEffect(EFFECT_STRING, obj.pos).destr()
					addEffect(EFFECT_STRING, rallyPos).destr()
					if not pData[GetOwningPlayer(u).getId()].escaper.camlock
						PanCameraToTimedForPlayer( GetOwningPlayer(u), rallyPos.x, rallyPos.y, 0.03 )
			case TeleportMode.KILLER
				if e instanceof EscaperSensorSetup and rdata.canBuild(obj.owner)
					dyn = e castTo SetupObject
					dyn.setPos(rallyPos)
					addEffect(EFFECT_STRING, obj.pos).destr()
					addEffect(EFFECT_STRING, rallyPos).destr()
			case TeleportMode.BOTH
				if e instanceof EscaperSensorSetup and rdata.canBuild(obj.owner)
					dyn = e castTo SetupObject
					dyn.setPos(rallyPos)
					addEffect(EFFECT_STRING, obj.pos).destr()
					addEffect(EFFECT_STRING, rallyPos).destr()
				else if e instanceof Escaper
					u.setPos(rallyPos.x, rallyPos.y)
					addEffect(EFFECT_STRING, obj.pos).destr()
					addEffect(EFFECT_STRING, rallyPos).destr()
					if not pData[GetOwningPlayer(u).getId()].escaper.camlock
						PanCameraToTimedForPlayer( GetOwningPlayer(u), rallyPos.x, rallyPos.y, 0.03 )
			

	override function update()
		skip
		
	function onCast()
		var id = GetSpellAbilityId()
		switch id
			case BOTH_ID
				actor..removeAbility(BOTH_ID)..addAbility(ESC_ID)
				mode = TeleportMode.ESCAPER
			case ESC_ID
				actor..removeAbility(ESC_ID)..addAbility(KILL_ID)
				mode = TeleportMode.KILLER
			case KILL_ID
				actor..removeAbility(KILL_ID)..addAbility(BOTH_ID)
				mode = TeleportMode.BOTH
