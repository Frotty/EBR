package Booster
import BaseObject

constant BOOSTER_ID = 'n00J'
constant EVENT_RADIUS = 32.
constant INCREASE_SPEED_ABIL = 'A04O'
constant DECREASE_SPEED_ABIL = 'A04Q'

public class Booster extends StaticBaseObject
	ConfigValue boostspeed = new ConfigValue(200, 20, "Boostspeed")
	
	construct( vec2 pos, player owner )
		super( pos, getUnit(owner, BOOSTER_ID, pos, angle(0), this), EVENT_RADIUS, function Booster.orderMove, CODE_NULL ) 
		EventListener.add(actor, EVENT_PLAYER_UNIT_SPELL_CAST, () -> onCast())
		clearQuestionmark()
		
	static function orderMove()
		let source = GetTriggeringTrigger().getSource()
		let u = GetTriggerUnit()
		Entity e = u.getEntity()
		thistype obj = source.getUserData() castTo thistype
		if e instanceof SetupObject
			SetupObject ek = e castTo SetupObject
			ek.actor.setMoveSpeed(obj.boostspeed.get())
			ek.setup.setMoveSpeed(obj.boostspeed.get())

	function onCast()
		let id = GetSpellAbilityId()
		switch id 
			case INCREASE_SPEED_ABIL
				boostspeed.increment(this, 520)
			case DECREASE_SPEED_ABIL
				boostspeed.decrement(this, 20)

	
	override function serialize() returns Json
		let json = super.serialize()
		json..addProperty(new Property(KEY_TYPE, BOOSTER_INDEX.toString()))
		return json

