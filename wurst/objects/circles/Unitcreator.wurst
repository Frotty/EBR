package Unitcreator
	import BaseObject
	import Terrain
	import EscaperKiller
	import CustomSpellBook
	import TimerUtils
	import RegionData
	import EventHandling
	import Texttag
	import Pointer

	
	constant int 	UNITCREATOR_ID   = 'n006'


	public class UnitCreator extends StaticBaseObject
		real interval = 5.
		real timerreal = 5.
		int spawnUnitType = 'h001'
		
		construct( vec2 pos, player owner)
			super( pos, CreateUnit(owner, UNITCREATOR_ID, pos.x, pos.y, 0), 0., CODE_NULL )
			active = false
			actor.registerCastEvent(Condition(function UnitCreator.onCast))
		
		override function update()
			super.update()
			if active
				if timerreal <= 0.0
					create(this)
					timerreal = interval
				else
					timerreal -= ANIMATION_PERIOD	
				
					
			
		static function create(UnitCreator obj)
			var rX = obj.getRallyX()
			var rY = obj.getRallyY()
			var X = obj.actor.getX()
			var Y = obj.actor.getY()
			var angl = angleBetweenCoords(X,Y,rX,rY)
			var data = getRegionData(X,Y)
			debugPrint("creating...", 1)
			EscaperKiller ek = null
			switch obj.spawnUnitType
				case 'BIGK'
					ek = new EscaperKiller(CreateUnit(obj.owner, rectbk[data.rtype], X, Y, angl.degrees() ), CreateUnit(obj.owner, rectbk[data.rtype], X, Y, angl.degrees() ), COLL_SIZE_BK)
					IssuePointOrder(ek.setup, "move" , rX,rY)
				case 'SMAL'
					ek = new EscaperKiller(CreateUnit(obj.owner, rectsk[data.rtype], X, Y, angl.degrees() ), CreateUnit(obj.owner, rectsk[data.rtype], X, Y, angl.degrees() ), COLL_SIZE_SK)
					IssuePointOrder(ek.setup, "move" , rX,rY)
				case 'u00A'
					ek = new EscaperKiller(CreateUnit(obj.owner, obj.spawnUnitType, X, Y, angl.degrees() ) , CreateUnit(obj.owner, obj.spawnUnitType, X, Y, angl.degrees() ), COLL_SIZE_GLAIVE)
					IssuePointOrder(ek.setup, "move" , rX,rY)
				case 'h001'
					ek = new EscaperKiller(CreateUnit(obj.owner, obj.spawnUnitType, X, Y, angl.degrees() ), CreateUnit(obj.owner, obj.spawnUnitType, X, Y, angl.degrees() ), COLL_SIZE_TANK)
					IssuePointOrder(ek.setup, "move" , rX,rY)
				case 'u008'
					ek = new EscaperKiller(CreateUnit(obj.owner, obj.spawnUnitType, X, Y, angl.degrees() ), CreateUnit(obj.owner, obj.spawnUnitType, X, Y, angl.degrees() ), COLL_SIZE_BRK)
					IssuePointOrder(ek.setup, "move" , rX,rY)
				case 'u006'
					ek = new EscaperKiller(CreateUnit(obj.owner, obj.spawnUnitType, X, Y, angl.degrees() ), CreateUnit(obj.owner, obj.spawnUnitType, X, Y, angl.degrees() ), COLL_SIZE_SRK)
					IssuePointOrder(ek.setup, "move" , rX,rY)
				case 'h01Q'
					var p = new Pointer(obj.pos.toVec2(), obj.owner)
					p.angl = angl.degrees()
					IssuePointOrder(p.setup, "move" , rX,rY)
					
			debugPrint("Created Unit with handleId: " + ek.actor.getHandleId().toString(), 3)
			
		static function onCast() returns boolean
			var id = GetSpellAbilityId()
			var obj = GetTriggerUnit().getUserData() castTo UnitCreator
			
			switch id 
				case INCREASE_INTERVAL_ABIL
					if obj.interval >= 10
						createTTEx(obj.pos, vec2(0,0.05), "|cffC51019Max", 10,  2., colorA(255,255,255,0), obj.owner  )
					else
						obj.interval += 0.25
						createTTEx(obj.pos, vec2(0,0.05), "|cffC51019Intervall "+ R2SW(obj.interval,1,2), 10,  2., colorA(255,255,255,0), obj.owner  )
				case DECREASE_INTERVAL_ABIL
					if obj.interval < 0.75
						createTTEx(obj.pos, vec2(0,0.05), "|cffC51019Min", 10,  2., colorA(255,255,255,0), obj.owner  )
					else
						obj.interval -= 0.25
						createTTEx(obj.pos, vec2(0,0.05), "|cffC51019Intervall "+ R2SW(obj.interval,1,2), 10,  2., colorA(255,255,255,0), obj.owner  )
						//DisplayTextToPlayer( owner, 0, 0, "|cffC51019Intervall is now: "+ R2SW(interval,1,2) )
				case START_ABIL
					obj.active = true
					obj.timerreal = obj.interval
					UnitAddAbility(obj.actor,PAUSE_ABIL)
					UnitRemoveAbility(obj.actor,START_ABIL)
				case PAUSE_ABIL
					debugPrint("pause", 1)
					UnitRemoveAbility(obj.actor,PAUSE_ABIL)
					UnitAddAbility(obj.actor,START_ABIL)
					obj.active = false
				case 'A045' // Big killer
					obj.spawnUnitType = 'BIGK'
				case 'A046' // Small killer
					obj.spawnUnitType = 'SMAL'
				case 'A048' // Big Random killer
					obj.spawnUnitType = 'u008'
				case 'A04D' // Pointer
					obj.spawnUnitType = 'h01Q'
				case 'A04W' // Glaive
					obj.spawnUnitType = 'u00A'
				case 'A04C' // Tank
					obj.spawnUnitType = 'h001'
				case 'A04B' // Chicken
					obj.spawnUnitType = 'u006'
			return false
			
		ondestroy
			actor.unregisterCastEvent()
		
	int INCREASE_INTERVAL_ABIL = 'A01P'
	int DECREASE_INTERVAL_ABIL = 'A01R'
	int START_ABIL = 'A00A'
	int PAUSE_ABIL = 'Tank'
	Table SPAWN_TYPE_ABIL
	
	public function init_Unitcreator()
		SPAWN_TYPE_ABIL.saveInt('A045','BIGK') // Big Killer
		SPAWN_TYPE_ABIL.saveInt('A046','SMAL') // Small Killer
		SPAWN_TYPE_ABIL.saveInt('A048','u008') // Big Random Killer
		SPAWN_TYPE_ABIL.saveInt('A04W','u00A') // Glaive
		SPAWN_TYPE_ABIL.saveInt('A04D','h01Q') // Pointer
		SPAWN_TYPE_ABIL.saveInt('A04B','u006') // Small Random Killer
		SPAWN_TYPE_ABIL.saveInt('A04C','h001') // tank

endpackage