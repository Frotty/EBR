package Unitcreator
import BaseObject
import EscaperKillers
import RegionData
import Texttag
import Pointer
import Knockbacker
import ObjectIds

constant int 	UNITCREATOR_ID   = 'n006'

public class UnitCreator extends StaticBaseObject
	real interval = 5.
	real timerreal = 5.
	int spawnUnitType = 'h001'
	
	construct( vec2 pos, player owner)
		super( pos, CreateUnit(owner, UNITCREATOR_ID, pos.x, pos.y, 0), 0., CODE_NULL )
		active = false
		EventListener.add(actor, EVENT_PLAYER_UNIT_SPELL_CAST, () -> onCast())
	
	override function update()
		super.update()
		if active
			if timerreal <= 0.0
				create(this)
				timerreal = interval
			else
				timerreal -= ANIMATION_PERIOD	
			
				
	static function create(UnitCreator obj)
		let rallyPos = obj.getRallyPoint().toVec2()
		let pos = obj.pos.toVec2()
		var data = getRegionData(obj.pos)
		EscaperSensorSetup ek = null
		switch obj.spawnUnitType
			case 'BIGK'
				ek = new BigKiller(pos, obj.owner, obj.getRallyAngle())
			case 'SMAL'
				ek = new SmallKiller(pos, obj.owner, obj.getRallyAngle())
			case 'u00A'
				ek = new GlaiveKiller(pos, obj.owner, obj.getRallyAngle())
			case 'h001'
				ek = new TankKiller(pos, obj.owner, obj.getRallyAngle())
			case 'u008'
				ek = new BigRandomKiller(pos, obj.owner, obj.getRallyAngle())
			case 'u006'
				ek = new SmallRandomKiller(pos, obj.owner, obj.getRallyAngle())
			case 'h01Q'
				ek = new Pointer(pos, obj.owner, obj.getRallyAngle())
			case KNOCKER_ID
				ek = new Knockbacker(pos, obj.owner, obj.getRallyAngle())
		ek.setup.issuePointOrder("move", rallyPos)
		
	function onCast()
		let id = GetSpellAbilityId()
		switch id 
			case INCREASE_INTERVAL_ABIL
				if interval >= 10
					createTTEx(pos, vec2(0,0.05), "|cffC51019Max", 10,  2., colorA(255,255,255,0), owner  )
				else
					interval += 0.25
					createTTEx(pos, vec2(0,0.05), "|cffC51019Intervall "+ R2SW(interval,1,2), 10,  2., colorA(255,255,255,0), owner  )
			case DECREASE_INTERVAL_ABIL
				if interval < 0.75
					createTTEx(pos, vec2(0,0.05), "|cffC51019Min", 10,  2., colorA(255,255,255,0), owner  )
				else
					interval -= 0.25
					createTTEx(pos, vec2(0,0.05), "|cffC51019Intervall "+ R2SW(interval,1,2), 10,  2., colorA(255,255,255,0), owner  )
					//DisplayTextToPlayer( owner, 0, 0, "|cffC51019Intervall is now: "+ R2SW(interval,1,2) )
			case START_ABIL
				active = true
				timerreal = interval
				UnitAddAbility(actor,PAUSE_ABIL)
				UnitRemoveAbility(actor,START_ABIL)
			case PAUSE_ABIL
				UnitRemoveAbility(actor,PAUSE_ABIL)
				UnitAddAbility(actor,START_ABIL)
				active = false
			case 'A045' // Big killer
				spawnUnitType = 'BIGK'
			case 'A046' // Small killer
				spawnUnitType = 'SMAL'
			case 'A048' // Big Random killer
				spawnUnitType = 'u008'
			case 'A04D' // Pointer
				spawnUnitType = 'h01Q'
			case 'A04W' // Glaive
				spawnUnitType = 'u00A'
			case 'A04C' // Tank
				spawnUnitType = 'h001'
			case 'A04B' // Chicken
				spawnUnitType = 'u006'
			case 'A07R'
				spawnUnitType = KNOCKER_ID
	
int INCREASE_INTERVAL_ABIL = 'A01P'
int DECREASE_INTERVAL_ABIL = 'A01R'
int START_ABIL = 'A00A'
int PAUSE_ABIL = 'Tank'
HashMap<int, int> SPAWN_TYPE_ABIL = new HashMap<int, int>()

public function init_Unitcreator()
	SPAWN_TYPE_ABIL.saveInt('A045','BIGK') // Big Killer
	SPAWN_TYPE_ABIL.saveInt('A046','SMAL') // Small Killer
	SPAWN_TYPE_ABIL.saveInt('A048','u008') // Big Random Killer
	SPAWN_TYPE_ABIL.saveInt('A04W','u00A') // Glaive
	SPAWN_TYPE_ABIL.saveInt('A04D','h01Q') // Pointer
	SPAWN_TYPE_ABIL.saveInt('A04B','u006') // Small Random Killer
	SPAWN_TYPE_ABIL.saveInt('A04C','h001') // tank

