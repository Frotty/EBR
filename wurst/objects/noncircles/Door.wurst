package Door
    import BaseObject
    import Terrain
    import Escaper
    import SetupObject
    import GameConstants
    import RGBA
    
	//NOTE: Some parts of this are from the old ebr  O.o   >:0
    int array keycolor
    int array colorRGBv
    constant int DOORDUMMY_ID = 'h002'
    constant int DOORORDER_ID = 'h00C'
    constant int DOORPATH = 'h006'
    constant int DOORPATH_O = 'h00F'
    constant int DOOROPEN_ABILITY_ID = 'A00J'
    constant int DOORTURN_ABILITY_ID = 'A01W'
    constant int DOORPLACEKEY_ABILITY_ID = 'Av42'
    constant real EVENT_RADIUS = 192
    //Item type ids
    // doesn't work yet
    int array KEY_COLOR_ID
    trigger castTrig
    
    
    
    
    public class Door extends StaticSetupObject
        unit pathing
        
        COLOR col = COLOR.WHITE
        
        boolean vertical = false
        boolean opened = false
        
        static function keyopen() //open with item and color conditions
        	unit source = GetTriggeringTrigger().getSource()
            unit u = GetTriggerUnit()
            Entity e = u.getUserData() castTo Entity
            Door door = source.getUserData() castTo Door
            thistype obj = source.getUserData() castTo thistype
            if e instanceof Escaper
          		if UnitHasItemOfTypeBJ( u, keycolor[door.col castTo int] ) and door.opened == false //WARNING BJ function//
            		RemoveItem( GetItemOfTypeFromUnitBJ( u, keycolor[door.col castTo int] ) ) //WARNING BJ function//
            		door.toggleOpen()
            		
        function changeColor( int id )
            switch id
            	case 'A05S' //red
                    col = COLOR.RED
                    
                    
            colorize()
                    
        function colorize()
            color c = colors[col castTo int]
            SetUnitVertexColor(actor,c.red,c.green,c.blue,0)
        
        function toggleOpen()
        	if opened
                closeDoor()
            else
                openDoor()
        
        function closeDoor()
            SetUnitAnimation( actor, "stand" )
            RemoveUnit( pathing )
            opened = false
            if vertical
                pathing  = CreateUnit( owner, DOORPATH, position.x, position.y, 0 )
            else
                pathing  = CreateUnit( owner, DOORPATH, position.x, position.y, 270 )
    
        function openDoor()
            SetUnitAnimation( actor, "Death Alternate" )
            RemoveUnit( pathing )
            opened = true
            if vertical
                pathing  = CreateUnit( owner, DOORPATH_O, position.x, position.y, 0 )
            else
                pathing  = CreateUnit( owner, DOORPATH_O, position.x, position.y, 270 )
        
        function turn()
            if vertical
                RemoveUnit( pathing )
                RemoveUnit( actor )
                vertical = false
                if opened
                    actor = CreateUnit( owner, DOORDUMMY_ID , position.x, position.y, 270 )
                    SetUnitAnimation( actor, "Death Alternate" )
                    pathing  = CreateUnit( owner, DOORPATH_O, position.x, position.y, 270 )
                else
                    actor = CreateUnit( owner, DOORDUMMY_ID , position.x, position.y, 270 )
                    pathing  = CreateUnit( owner, DOORPATH, position.x, position.y, 270 )
            else
                RemoveUnit( pathing )
                RemoveUnit( actor )
                vertical = true
                if opened 
                    actor = CreateUnit(owner, DOORDUMMY_ID , position.x, position.y, 0 )
                    SetUnitAnimation( actor, "Death Alternate" )
                    pathing  = CreateUnit( owner, DOORPATH_O, position.x, position.y, 0 )
                else
                    print("yäs " + GetPlayerId(owner).toString())
                    actor = CreateUnit( owner, DOORDUMMY_ID , position.x, position.y, 0 )
                    pathing  = CreateUnit( owner, DOORPATH, position.x, position.y, 0 )
					print("yäs2")
    
		static function onSpellCast()
			print("casted")
	        unit u = GetTriggerUnit()
	        print("casted2")
	        Door door = u.getUserData() castTo Door
	        print(door.position.toString())
	        int id = GetSpellAbilityId()
	        print("casted3")
	        if id == DOOROPEN_ABILITY_ID
	            door.toggleOpen()
	        else if id == DOORTURN_ABILITY_ID
				print("turn")
	            door.turn()
	        else 
	            door.changeColor(id)


	    
	    construct( vec2 pos, player owner )
	    	super( pos.toVec3(), CreateUnit(owner,DOORDUMMY_ID, pos.x, pos.y, 270) , 
	    						CreateUnit(owner,DOORORDER_ID, pos.x, pos.y, 0), EVENT_RADIUS, function Door.keyopen )
	    	print("construct1")
			pathing = CreateUnit( this.owner, DOORPATH, pos.x, pos.y, 270 )
			print("construct2")
			TriggerRegisterUnitEvent( castTrig, setup, EVENT_UNIT_SPELL_CAST )
			print("construct3")
	    
    
    public function init_Door()
		castTrig = CreateTrigger()
		castTrig.addAction(function Door.onSpellCast)
        //color id        unit id
        KEY_COLOR_ID[0] = 'I000' //white
        KEY_COLOR_ID[1] = 'I005' //red
        KEY_COLOR_ID[2] = 'I006' //green
        KEY_COLOR_ID[3] = 'I007' //blue
        KEY_COLOR_ID[4] = 'I008' //yellow
        KEY_COLOR_ID[5] = 'I009' //pink
        KEY_COLOR_ID[6] = 'I00A' //cyan
        KEY_COLOR_ID[7] = 'I00J' //gray


endpackage