package Vortex
import Entity
import Escaper
import Texttag

constant int ID = 'n013'
constant int INC_ID = 'A04J'
constant int DEC_ID = 'A04K'

constant real GRAV_RADIUS_SQ = 172225 //415

public class Vortex extends UnitEntity
	real gravity = 2.
	
	construct( vec2 pos, player owner )
		super( pos.toVec3(), CreateUnit(owner, ID, pos.x, pos.y, 0) )
		EventListener.add(actor, EVENT_PLAYER_UNIT_SPELL_CAST, () -> onCast())
		
	override function update()
		for e in escapers
			if pos.toVec2().distanceToSq( e.pos.toVec2() ) < GRAV_RADIUS_SQ and not e.flying
				var angl = e.pos.toVec2().angleTo(pos.toVec2())
				e.vortexVelocity += vec3( Cos(angl.radians) * gravity, Sin(angl.radians) * gravity, 0 )
		
	static function onCast() returns boolean
		var id = GetSpellAbilityId()
		var vdata = GetTriggerUnit().getUserData() castTo Vortex
		switch id
			case INC_ID
				if vdata.gravity < 15.
					vdata.gravity += .5
					createTTEx(vdata.pos, vec2(0,0.06), "Gravity : " + vdata.gravity.toString(), 12,  2., colorA(255,255,255,0), vdata.owner  )
			case DEC_ID
				if vdata.gravity > -15.
					vdata.gravity -= .5
					createTTEx(vdata.pos, vec2(0,0.06), "Gravity : " + vdata.gravity.toString(), 12,  2., colorA(255,255,255,0), vdata.owner  )
		return false


	ondestroy
		actor.remove()
				
