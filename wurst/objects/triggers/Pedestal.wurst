package Pedestal
import ChannelAbilityPreset
import Assets
import BaseObject
import ClosureForGroups

public int PED_ID
public int SELECT_SINGLE_ID
public int SELECT_AOE_ID
public int SAVE_ID
public int LOAD_ID

constant AOE_PICK_RANGE = 378.

public class MemoryAccessPedestal extends StaticBaseObject
	private LinkedList<Serializable> entities = new LinkedList<Serializable>()
	
	construct(vec2 pos, player owner)
		super(pos, createUnit(owner, PED_ID, pos, angle(bj_UNIT_FACING)), 0, CODE_NULL, CODE_NULL)
		actor..addAbility(SELECT_SINGLE_ID)..addAbility(SELECT_AOE_ID)
		..addAbility(SAVE_ID)..addAbility(LOAD_ID)
		EventListener.add(actor, EVENT_PLAYER_UNIT_SPELL_CAST, () -> onCast())
		
		
	function addObj(Serializable serializable)
		if not entities.contains(serializable)
			entities.add(serializable)
			if serializable instanceof UnitEntity
				let ue = serializable castTo UnitEntity
				addEffect(Other.furbolgtracker_portrait,ue.actor.getPos())
		
	function onCast()
		let id = GetSpellAbilityId()
		let tpos = getSpellTargetPos()
		switch id
			case SELECT_AOE_ID
				forUnitsInRange(tpos, AOE_PICK_RANGE, (unit u) -> begin
					if u != actor
						if u.getEntity() != null
							var ed = u.getEntity()
							if ed.owner == owner
								addObj(ed)
				end)
			case SAVE_ID
				var s = ""
				for sEnt in entities
					s += sEnt.serialize()
					
				print(s)
				
@objectgen function genMAP()
	PED_ID = UNIT_ID_GEN.next()
	SELECT_SINGLE_ID = ABIL_ID_GEN.next()
	SELECT_AOE_ID = ABIL_ID_GEN.next()
	SAVE_ID = ABIL_ID_GEN.next()
	LOAD_ID = ABIL_ID_GEN.next()
	if compiletime
		new BuildingDefinition(PED_ID,'hwtw')
		..setName("M.A.P.")
		..setNormalAbilities("")
		..setModelFile(Units.bookofSummoningPedestal)
		..setScalingValue(.75)
		..setSelectionScale(.8)
		..setButtonPositionX(2)
		..setButtonPositionX(1)
		..setTooltipBasic("Erect M.A.P.")
		..setTooltipExtended("Creates a Memory Access Pedestal which allows you to save and load entities")
		..setRace(Race.Creeps)
		..setGroundTexture("")
		..setPathingMap("PathTextures\\4x4unbuildable.tga")
		..setGoldCost(0)..setLumberCost(0)
		..setPlacementRequires("")
		..setCollisionSize(0)
		..setUpgradesTo("")
			
		new ChannelAbilityPreset(SELECT_SINGLE_ID, 1, true)
		..setHeroAbility(false)
		..presetCastRange((int lvl) -> 1200.)
		..setName("Select single")
		..presetTargetTypes(Targettype.UTARGET)
		..presetCooldown((int lvl) -> 0.)
		..presetManaCost((int lvl) -> 0)
		..presetTooltipNormal((int lvl) -> "Select single entity")
		..presetTooltipNormalExtended((int lvl) -> "Adds the target entity to the list of saved objects")
		
		new ChannelAbilityPreset(SELECT_AOE_ID, 1, true)
		..setHeroAbility(false)
		..presetCastRange((int lvl) -> 1200.)
		..setName("Select single")
		..presetTargetTypes(Targettype.PTARGET)
		..presetAreaofEffect((int lvl) -> AOE_PICK_RANGE)
		..presetCooldown((int lvl) -> 0.)
		..presetManaCost((int lvl) -> 0)
		..presetTooltipNormal((int lvl) -> "Select multiple entities")
		..presetTooltipNormalExtended((int lvl) -> "Adds the target entities to the list of saved objects")
		
		new ChannelAbilityPreset(SAVE_ID, 1, true)
		..setHeroAbility(false)
		..setName("Save")
		..presetTargetTypes(Targettype.NOTARGET)
		..presetCooldown((int lvl) -> 2.)
		..presetManaCost((int lvl) -> 0)
		..presetTooltipNormal((int lvl) -> "Save")
		..presetTooltipNormalExtended((int lvl) -> "Save entities as template.\nSaves to disk if local files enabled")
		
		new ChannelAbilityPreset(LOAD_ID, 1, true)
		..setHeroAbility(false)
		..setName("Load")
		..presetTargetTypes(Targettype.NOTARGET)
		..presetCooldown((int lvl) -> 2.)
		..presetManaCost((int lvl) -> 0)
		..presetTooltipNormal((int lvl) -> "Load")
		..presetTooltipNormalExtended((int lvl) -> "load template")
	
