package Key
import ItemObject
import Escaper
import ClosureTimers
import Fx
public int array keyIds

constant int DYN_ID = 'A00M'
constant int STATIC_ID = 'A01O'

public class Key extends ItemObject
	EBRColor col = EBRColor.WHITE
	boolean picked = false
	boolean followWalkable = true
	effect returnSfx = null
	Escaper holder
	Fx fx
	
	construct(vec2 pos, player owner)
		super( pos, CreateItem(keyIds[0], pos.x, pos.y), CreateUnit(owner, 'h10K', pos.x, pos.y, 0 ) )
		EventListener.add(setup, EVENT_PLAYER_UNIT_SPELL_CAST, () -> onCast())
		
	function recolor()
		RemoveItem(actorItem)
		actorItem = createItem(keyIds[col castTo int], pos)
		actorItem.setEntity(this)
		
	override function onUse(Escaper user)
		
	override function onPickup(Escaper holder)
		if isEscaper(holder.owner) or this.owner == holder.owner
			picked = true
			this.holder = holder
			fx = new Fx(pos, "war3mapImported\\Key_ITEM.mdx")
			..setColor(col.toColor())
			..setXYZ(holder.getPos()+vec3(0,0,128))
			setup.hide()
			activate()
		else
			picked = false
			holder.actor.removeItem(actorItem)
			actorItem.setPos(pos.toVec2())
			setup.setXY(pos.toVec2())
			setup.show()
			this.holder = null
			
	override function onDrop(Escaper e)
		picked = false
		holder = null
		if fx != null
			fx.hiddenDestroy()
			fx = null
		setup.setXY(pos.toVec2())
		setup.show()
		nullTimer(() -> begin
			actorItem.setEntity(null)
			actorItem.remove()
			actorItem = CreateItem( keyIds[col castTo int], pos.x, pos.y )
			actorItem.setEntity(this)
		end)
		
	override function update()
		if picked
			fx.setXYZ(holder.getPos()+vec3(0,0,128))
			if followWalkable and not holder.flying and not holder.sliding and not holder.onUnwalkable
				pos = holder.getPos()
		else
			super.update()
		
	function onCast() returns boolean
		let id = GetSpellAbilityId()
		switch id
			case colorSpells[0]
				col = EBRColor.WHITE
			case colorSpells[1]
				col = EBRColor.RED
			case colorSpells[2]
				col = EBRColor.BLUE
			case colorSpells[3]
				col = EBRColor.TEAL
			case colorSpells[4]
				col = EBRColor.PURPLE
			case colorSpells[5]
				col = EBRColor.YELLOW
			case colorSpells[6]
				col = EBRColor.ORANGE
			case colorSpells[7]
				col = EBRColor.GREEN
			case colorSpells[8]
				col = EBRColor.PINK
			case DYN_ID
				followWalkable = false
				setup..removeAbility(DYN_ID)..addAbility(STATIC_ID)
				returnSfx = AddSpecialEffect("XTex.mdx", pos.x, pos.y)
			case STATIC_ID
				followWalkable = true
				setup..removeAbility(STATIC_ID)..addAbility(DYN_ID)
				if returnSfx != null
					returnSfx.destr()
		recolor()
		return false
		
	ondestroy
		if fx != null
			fx.hiddenDestroy()
		holder = null
		if returnSfx != null
			returnSfx.destr()
			
		
@init1 function init_Key()
	keyIds[0] = 'I009'
	keyIds[1] = 'I00C'
	keyIds[2] = 'I004'
	keyIds[3] = 'I008'
	keyIds[4] = 'I00J'
	keyIds[5] = 'I005'
	keyIds[6] = 'I00O'
	keyIds[7] = 'I00B'
	keyIds[8] = 'I006'
	
	