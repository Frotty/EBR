package Boots
import ItemObject
import GameConstants
import Escaper
import BuilderConstants
import EventHandling

constant int DYN_ID = 'A00M'
constant int STATIC_ID = 'A01O'

public class Boots extends ItemObject
	boolean picked = false
	boolean followWalkable = true
	Escaper holder
	
	construct(vec2 pos, player owner)
		super( pos, CreateItem(BOOTS_ID, pos.x, pos.y), CreateUnit(owner, 'h10K', pos.x, pos.y, 0 ) )
		setup.registerCastEvent(Condition(function Boots.onCast))
		
	function pickedUp(Escaper holder)
		picked = true
		this.holder = holder
		setup.hide()
		
	function dropped()
		picked = false
		holder = null
		setup.setXY(pos.toVec2())
		setup.show()
		actorItem = CreateItem( BOOTS_ID, pos.x, pos.y )
		actorItem.setUserData(this castTo int)

		
		
	override function update()
		if picked and followWalkable
			if not holder.flying and not holder.sliding and not holder.onUnwalkable
				pos = holder.pos
				
			
		
	static function onCast() returns boolean
		var id = GetSpellAbilityId()
		var data = GetTriggerUnit().getUserData() castTo Boots
		switch id
			case DYN_ID
				data.followWalkable = false
				data.setup..removeAbility(DYN_ID)..addAbility(STATIC_ID)
			case STATIC_ID
				data.followWalkable = true
				data.setup..removeAbility(STATIC_ID)..addAbility(DYN_ID)
		return false
		
	ondestroy
		dropTrig.disable()
		actorItem.remove()
		dropTrig.enable()
		holder = null
		setup.unregisterCastEvent()
		setup.remove()
	
	
	