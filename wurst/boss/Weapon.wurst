package Weapon
import ItemObject
import Escaper
import EventHandling
import TempGroups
import Boss
import Entity
import Projectile
import Wall

constant int NEXT_ID = 'A07D'
constant int PREW_ID = 'A07E'
public constant int BM_WEAPON_ID = 'A07I'
public constant int ATTACK_MELEE_ID = 'A07G'
public constant int ATTACK_RANGED_ID = 'A07H'
tuple Weapons(int itemID, ATTACK_TYPE atype, real range, real aoe, real dmg, string eff)
public Weapons array weapon

public enum ATTACK_TYPE
	MELEE
	RANGED

public class Weapon extends ItemObject
	int wpid = 0
	boolean picked = false
	Escaper holder
	
	construct(vec2 pos, player owner)
		super( pos, CreateItem(weapon[0].itemID, pos.x, pos.y), CreateUnit(owner, 'h00K', pos.x, pos.y, 0 ) )
		setup.registerCastEvent(Condition(function Weapon.onCast))
		
	function pickedUp(Escaper holder)
		picked = true
		this.holder = holder
		setup.hide()
		
	function dropped()
		picked = false
		holder = null
		setup.setXY(pos.toVec2())
		setup.show()
		actorItem = CreateItem( weapon[wpid].itemID, pos.x, pos.y )
		actorItem.setUserData(this castTo int)

		
	override function update()
		pos = holder.pos
		
	static function onCast() returns boolean
		var id = GetSpellAbilityId()
		var obj = GetSpellAbilityUnit().getUserData() castTo Weapon
		switch id
			case NEXT_ID
				obj.wpid ++
				obj.actorItem.remove()
				obj.actorItem = CreateItem(weapon[obj.wpid].itemID, obj.pos.x, obj.pos.y)
			case PREW_ID
				obj.wpid --
				obj.actorItem.remove()
				obj.actorItem = CreateItem(weapon[obj.wpid].itemID, obj.pos.x, obj.pos.y)
		return false
		
	function attackm()
		var a = angle(holder.actor.getFacing())
		GroupEnumUnitsInRange(ENUM_GROUP, polarProjectionX(holder.pos.x,weapon[wpid].aoe/2,a), polarProjectionY(holder.pos.y,weapon[wpid].aoe/2,a), weapon[wpid].aoe, null)
		for u in ENUM_GROUP
			var e = u.getUserData() castTo Entity
			if e instanceof Boss
				var b = e castTo Boss
				holder.actor.damageTarget(b.actor,weapon[wpid].dmg)
	
	function attackr(real targetx, real targety)
		var a = angle(holder.actor.getFacing())
		new WeaponMissile(pos, vec2(targetx,targety),owner, wpid)
		
	ondestroy
		dropTrig.disable()
		actorItem.remove()
		dropTrig.enable()
		holder = null
		setup.unregisterCastEvent()
		setup.remove()
	
class WeaponMissile extends Projectile
	int id
	group affected
	
	construct(vec3 pos, vec2 target, player owner, int id)
		super( pos, weapon[id].aoe, owner, pos.angleTo2d(target), weapon[id].eff )
		setSpeed(128)
		setRanged(700.)
		this.id = id


	override function update()
		super.update()
		GroupEnumUnitsInRange(ENUM_GROUP, pos.x, pos.y, weapon[id].aoe, null)
		for u in ENUM_GROUP
			var e = u.getUserData() castTo Entity	
			if e instanceof Boss
				UnitDamageTarget(getDummy(), u, weapon[id].dmg, false, false, ATTACK_TYPE_PIERCE, DAMAGE_TYPE_NORMAL, null)
				destroy(this)
			else if e instanceof Wall
				destroy(this)
		
		ENUM_GROUP.clear()
		
public function init_Weapon()
	weapon[0] = Weapons('I00U', ATTACK_TYPE.MELEE, 0., 100., 6., "")
	weapon[1] = Weapons('I00V', ATTACK_TYPE.RANGED, 700., 60., 6., "Abilities\\Weapons\\SpiritOfVengeanceMissile\\SpiritOfVengeanceMissile.mdl")
	