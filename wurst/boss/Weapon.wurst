package Weapon
import initlater ItemObject
import initlater Escaper
import initlater Boss
import initlater Entity
import initlater Projectile
import initlater Wall
import initlater Fx

constant int NEXT_ID = 'A07D'
constant int PREW_ID = 'A07E'
public constant int BM_WEAPON_ID = 'A07I'
public constant int ATTACK_MELEE_ID = 'A07G'
public constant int ATTACK_RANGED_ID = 'A07H'
tuple Weapons(int itemID,int abilID, ATTACK_TYPE atype, real range, real aoe, real dmg, string eff)
public Weapons array weapon
constant int weaponnumber = 3

public enum ATTACK_TYPE
	MELEE
	RANGED

public class Weapon extends ItemObject
	int wpid
	boolean picked = false
	player originalowner
	Escaper holder
	
	construct(vec2 pos, player owner)
		super( pos, CreateItem(weapon[0].itemID, pos.x, pos.y), CreateUnit(owner, 'h00K', pos.x, pos.y, 0 ) )
		wpid = 0
		originalowner = owner
//		setup.registerCastEvent(Condition(function Weapon.onCast))
		
	function pickedUp(Escaper holder)
		picked = true
		owner = holder.owner
		this.holder = holder
		if weapon[wpid].atype == ATTACK_TYPE.MELEE
			holder.actor.addAbility(ATTACK_MELEE_ID)
		else
			holder.actor.addAbility(ATTACK_RANGED_ID)
		setup.hide()
		
	function dropped()
		picked = false
		if weapon[wpid].atype == ATTACK_TYPE.MELEE
			holder.actor.removeAbility(ATTACK_MELEE_ID)
		else
			holder.actor.removeAbility(ATTACK_RANGED_ID)
		holder = null
		owner = originalowner
		setup.setXY(pos.toVec2())
		setup.show()
		actorItem = CreateItem( weapon[wpid].itemID, pos.x, pos.y )
		actorItem.setUserData(this castTo int)

		
	override function update()
		if holder != null
			pos = holder.pos
		
	static function onCast() returns boolean
		var id = GetSpellAbilityId()
		var obj = GetSpellAbilityUnit().getUserData() castTo Weapon
		for i= 0 to weaponnumber
			if weapon[i].abilID == id
				obj.wpid = i
				obj.actorItem.remove()
				obj.actorItem = CreateItem(weapon[obj.wpid].itemID, obj.pos.x, obj.pos.y)
				obj.actorItem.setUserData(obj castTo int)
		return false
		
	function attackm()
		var a = holder.actor.getFacing().asAngleDegrees()
		var op = holder.pos.polarProject(weapon[wpid].aoe/2,a,angle(0))
		GroupEnumUnitsInRange(ENUM_GROUP, op.x,op.y, weapon[wpid].aoe, null)
		for u in ENUM_GROUP
			var e = u.getEntity()
			if e instanceof Boss
				var b = e castTo Boss
				b.onDamage(owner, weapon[wpid].dmg)
		var fx = new Fx(op, a)
		fx.setFx(weapon[wpid].eff)
		destroy(fx)
	
	function attackr(vec3 start, real targetx, real targety)
		new WeaponMissile(start, vec2(targetx,targety),owner, wpid)
		
	ondestroy
		dropTrig.disable()
		actorItem.remove()
		dropTrig.enable()
		holder = null
		setup.remove()
	
class WeaponMissile extends Projectile
	int id
	
	construct(vec3 pos, vec2 target, player owner, int id)
		super( vec3(pos.x,pos.y,40.), weapon[id].aoe, owner, pos.angleTo2d(target), weapon[id].eff )
		setSpeed(18)
		setRanged(weapon[id].range)
		this.id = id


	override function update()
		super.update()
		GroupEnumUnitsInRange(ENUM_GROUP, pos.x, pos.y, weapon[id].aoe, null)
		for u in ENUM_GROUP
			var e = u.getEntity()
			if e instanceof Boss
				var b = e castTo Boss
				b.onDamage(owner, weapon[id].dmg)
				destroy(this)
			else if e instanceof Wall
				destroy(this)
		
		ENUM_GROUP.clear()
		
public function init_Weapon()
	weapon[0] = Weapons('I00U','A07N', ATTACK_TYPE.MELEE, 0., 200., 40., "Abilities\\Spells\\Human\\Defend\\DefendCaster.mdl")
	weapon[1] = Weapons('I00V','A07D', ATTACK_TYPE.RANGED, 700., 60., 20., "Abilities\\Weapons\\PriestMissile\\PriestMissile.mdl")
	weapon[2] = Weapons('I00W','A07O', ATTACK_TYPE.MELEE, 0., 300., 20., "Abilities\\Spells\\Items\\AIlb\\AIlbSpecialArt.mdl")
	weapon[3] = Weapons('I00X','A07E', ATTACK_TYPE.RANGED, 650., 70., 20., "Abilities\\Weapons\\LichMissile\\LichMissile.mdl")
	