package Boss
import SetupObject
import PlayerData
import public BossSpellTarget
import CustomBar
import Minion

constant BOSS_TOMB_ID = 'n01P'
constant HP_UP_ID = 'A06U'
constant HP_DOWN_ID = 'A06T'
constant REAL_HP_BIG_ID = 'A06X'
constant REAL_HP_SMALL_ID = 'A06Y'
constant DMG_UP_ID = 'A001'
constant DMG_DOWN_ID = 'A001'
constant REAL_DMG_BIG_ID = 'A001'
constant REAL_DMG_SMALL_ID = 'A001'
constant AOE_SPELL_ID = 'A06V'
constant MISSILE_SPELL_ID = 'A06W'
constant REVIVE_ID = 'A07L'
constant SUMMON_MINION_ID = 'A085'

public class Boss extends SetupObject
	real maxHp = 400.
	real currentHP = 400
	CustomBar hpBar

	construct( player owner, vec2 tpos, int id)
		super( tpos.toVec3(), createUnit(owner, id, tpos, angle(0)), createUnit(owner, id, tpos, angle(0)), 64)
		EventListener.add(setup, EVENT_PLAYER_UNIT_SPELL_CAST, () -> onCast())
		hpBar = new CustomBar(pos, "|", 120, 8)
		hpBar.setForeground(colorA(200,255,125,255))

	override function update()
		super.update()
		hpBar.setPosXY(pos.x-100, pos.y + 100)
		hpBar.setValue(currentHP / maxHp * 100.0)

	function onDamage(Escaper escaper, real dmg)
		currentHP -= dmg
		
	function onCast()
		let id = GetSpellAbilityId()
		actor.setAnimation("spell")
		switch id
			case HP_UP_ID
				int bighp = GetUnitAbilityLevel(actor, REAL_HP_BIG_ID)
				int smallhp = GetUnitAbilityLevel(actor, REAL_HP_SMALL_ID)
				if smallhp == 4
					if bighp < 4
						if bighp == 0
							actor.addAbility(REAL_HP_BIG_ID)
						else
							SetUnitAbilityLevel(actor,REAL_HP_BIG_ID, bighp+1)
						SetUnitAbilityLevel(actor,REAL_HP_SMALL_ID, 0)
					else
						createTTEx(pos, vec2(0,0.05), "|cffC51019Max HP", 10,  2., colorA(255,255,255,0), owner)
				else 
					if smallhp == 0
						actor.addAbility(REAL_HP_SMALL_ID)
					else
						SetUnitAbilityLevel(actor,REAL_HP_SMALL_ID, smallhp+1)
			case HP_DOWN_ID
				int bighp = GetUnitAbilityLevel(actor, REAL_HP_BIG_ID)
				int smallhp = GetUnitAbilityLevel(actor, REAL_HP_SMALL_ID)
				if smallhp == 0
					if bighp > 0
						SetUnitAbilityLevel(actor,REAL_HP_BIG_ID, bighp-1)
						SetUnitAbilityLevel(actor,REAL_HP_SMALL_ID, 4)
					else
						createTTEx(pos, vec2(0,0.05), "|cffC51019Min HP", 10,  2., colorA(255,255,255,0), owner  )
				else 
					SetUnitAbilityLevel(actor,REAL_HP_SMALL_ID, smallhp-1)
			case AOE_SPELL_ID
				let tgts = getSpellTargets(SpellType.AOE)
				for target in tgts
					target.castAoe()
				destroy tgts
			case MISSILE_SPELL_ID
				let tgts = getSpellTargets(SpellType.MISSILE)
				for target in tgts
					new BossMissile(actor,target)
				destroy tgts
			case SUMMON_MINION_ID
				let a = true
				// TODO `for spawner in minionspawners`
				new Minion(pos.toVec2(), owner, actor.getFacingAngle())
				// TODO play sound effect
			case REVIVE_ID
				revive()
	
	function getSpellTargets(SpellType stype) returns LinkedList<SpellTarget>
		let tgs = targets.get(owner.getId())
		let newTgs = new LinkedList<SpellTarget>()
		for target in tgs
			if target.stype == stype
				newTgs.add(target)
		return newTgs
	
				
	function revive()
		PlaySound("Units\\Undead\\Varimathras\\VarimathrasReady1.wav")
		destroy this