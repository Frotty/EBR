package Boss
import Entity
import Terrain
import SetupObject
import PlayerData
import Escaper
import EventHandling
import PreloadHandler
import BossSpellTarget
import TempGroups
import RegionData
import Texttag
import CustomBar

constant int HP_UP_ID = 'A06U'
constant int HP_DOWN_ID = 'A06T'
constant int REAL_HP_BIG_ID = 'A06X'
constant int REAL_HP_SMALL_ID = 'A06Y'
constant int DMG_UP_ID = 'A001'
constant int DMG_DOWN_ID = 'A001'
constant int REAL_DMG_BIG_ID = 'A001'
constant int REAL_DMG_SMALL_ID = 'A001'
constant int AOE_SPELL_ID = 'A06V'
constant int MISSILE_SPELL_ID = 'A06W'


public class Boss extends DynamicSetupObject
	int aoe_id = 0
	int missile_id = 0
	CustomBar hpBar
	real maxHp = 200
	RegionData rdata

	static function onInRangeEvent()
		var ent = GetTriggerUnit().getUserData() castTo Entity
		if ent instanceof Escaper
			var es = ent castTo Escaper
			if not es.flying
				es.kill()

	construct( player owner, real x, real y, int id)
		super( vec3(x, y, 0), CreateUnit(owner, id, x, y, 0),CreateUnit(owner, id, x, y, 0), 32, function Boss.onInRangeEvent )
		setup.registerCastEvent(Condition(function onCast))
		actor.addAbility(REAL_HP_BIG_ID)
		SetUnitAbilityLevel(actor,REAL_HP_BIG_ID,2)

		hpBar = new CustomBar(pos, "|", 100, 7.5)
		hpBar.setForeground(colorA(0,225,0,0))
		hpBar.setBackground(colorA(100,25,25,0))
		hpBar.lockToUnit(actor, -90, 0, 256)
		rdata = getRegionData(pos.x, pos.y)
		
	override function update()
		super.update()
		hpBar.setValue(actor.getHP() / maxHp * 100.0)
		if not pos.toVec2().isInRect(rdata.theRect)
			setPos(rdata.theRect.getCenter().withZ(0))
			DisplayTextToPlayer(owner, 0,0, "|cffD62921You can't move your boss out of the boss region")

	function onDamage(player atker, real dmg)
		pData[atker.getId()].escaper.actor.damageTarget(setup,dmg)
		
	static function onCast() returns boolean

		var data = GetTriggerUnit().getUserData() castTo Entity
		
		if data instanceof Boss
			var boss = data castTo Boss
			var id = GetSpellAbilityId()
			var ox = GetSpellTargetX()
			var oy = GetSpellTargetY()
			switch id
				case HP_UP_ID
					int bighp = GetUnitAbilityLevel(boss.actor, REAL_HP_BIG_ID)
					int smallhp = GetUnitAbilityLevel(boss.actor, REAL_HP_SMALL_ID)
					if smallhp == 4
						if bighp < 4
							if bighp == 0
								boss.actor.addAbility(REAL_HP_BIG_ID)
							else
								SetUnitAbilityLevel(boss.actor,REAL_HP_BIG_ID, bighp+1)
							SetUnitAbilityLevel(boss.actor,REAL_HP_SMALL_ID, 0)
						else
							createTTEx(boss.pos, vec2(0,0.05), "|cffC51019Max HP", 10,  2., colorA(255,255,255,0), boss.owner  )
					else 
						if smallhp == 0
							boss.actor.addAbility(REAL_HP_SMALL_ID)
						else
							SetUnitAbilityLevel(boss.actor,REAL_HP_SMALL_ID, smallhp+1)
				case HP_DOWN_ID
					int bighp = GetUnitAbilityLevel(boss.actor, REAL_HP_BIG_ID)
					int smallhp = GetUnitAbilityLevel(boss.actor, REAL_HP_SMALL_ID)
					if smallhp == 0
						if bighp > 0
							SetUnitAbilityLevel(boss.actor,REAL_HP_BIG_ID, bighp-1)
							SetUnitAbilityLevel(boss.actor,REAL_HP_SMALL_ID, 4)
						else
							createTTEx(boss.pos, vec2(0,0.05), "|cffC51019Min HP", 10,  2., colorA(255,255,255,0), boss.owner  )
					else 
						SetUnitAbilityLevel(boss.actor,REAL_HP_SMALL_ID, smallhp-1)
				case AOE_SPELL_ID
					var g = boss.getSpellTargets(SpellType.AOE)
					for unit u in g
						var spt = u.getUserData() castTo SpellTarget
						spt.castAOE(boss)
				case MISSILE_SPELL_ID
					var g = boss.getSpellTargets(SpellType.MISSILE)
					for unit u in g
						var spt = u.getUserData() castTo SpellTarget
						spt.castMissile(boss)
		return false
	
	function getSpellTargets(SpellType stype) returns group
		var ox = pos.x
		var oy = pos.y
		var rdata = getRegionData(ox,oy)
		GroupEnumUnitsInRect(ENUM_GROUP, rdata.theRect, null)
		group g = CreateGroup()
		for unit u in ENUM_GROUP
			if GetUnitTypeId(u) == SPELLTARGET_ID and GetOwningPlayer(u) == owner and u.getUserData() > 0
				var spt = u.getUserData() castTo SpellTarget
				if spt.stype == stype
					GroupAddUnit(g, u)
		ENUM_GROUP.clear()
		return g
	
	
