package Minion
import public EscaperSensor
import Escaper

public constant COLL_SIZE_MINION = 68.

public class Minion extends EscaperSensorSetup
    private Escaper target

    construct(vec2 pos, player owner, angle facing)
        super(pos.toVec3(), owner, getRegionData(pos).getTypeSet().minionId, facing, COLL_SIZE_MINION, COLL_SIZE_MINION + 16)
        selectTarget()

    construct(vec2 pos, player owner)
        super(pos.toVec3(), owner, getRegionData(pos).getTypeSet().minionId, COLL_SIZE_MINION, COLL_SIZE_MINION + 16)
        selectTarget()

    override function update()
        super.update()
        if target.alive != true or getRegionData(target.pos) != currentRegion
            selectTarget()
        else if target != null
            // Spamming the order like this might not be a good idea
            actor.issuePointOrder("move", target.pos.toVec2())

    function selectTarget()
        updatePos()
        target = null
        var closestDist = -1.
        for Escaper e in currentRegion.getEscapers()
            if e.alive
                let dist = e.pos.toVec2().distanceTo(pos.toVec2())
                if closestDist == -1. or dist < closestDist
                    closestDist = dist
                    target = e
        if target != null
            actor.issuePointOrder("move", target.pos.toVec2())
