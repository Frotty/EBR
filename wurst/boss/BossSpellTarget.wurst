package BossSpellTarget
import SetupObject
import InstantDummyCaster
import Escaper
import HomingProjectile
import Assets
import ClosureForGroups
import ClosureTimers

public constant int SPELLTARGET_ID = 'u00F'
public constant int AOE_ID = 'A06V' 
public constant int MISSILE_ID = 'A06W'

public enum SpellType
	NONE
	AOE
	LINE
	MISSILE


public HashMap<int,LinkedList<SpellTarget>> targets = new HashMap<int,LinkedList<SpellTarget>>()

public class SpellTarget extends SetupObject
	SpellType stype = SpellType.NONE

	construct(vec2 pos, player owner)
		super(pos.toVec3(), CreateUnit(owner, SPELLTARGET_ID, pos.x, pos.y, 0), CreateUnit(owner, SPELLTARGET_ID, pos.x, pos.y, 0), 32)
		stype = SpellType.NONE
		EventListener.add(setup, EVENT_PLAYER_UNIT_SPELL_CAST, () -> onCast())
		if not targets.has(owner.getId())
			targets.put(owner.getId(), new LinkedList<SpellTarget>())
		targets.get(owner.getId()).add(this)
		
	function onCast()
		let id = GetSpellAbilityId()
		switch id
			case AOE_ID
				stype = SpellType.AOE
				actor..setVertexColor(255,255,0,255)
				..removeAbility(AOE_ID)
				..addAbility(MISSILE_ID)
			case MISSILE_ID
				stype = SpellType.MISSILE
				actor..setVertexColor(0,255,255,255)
				..removeAbility(MISSILE_ID)
				..addAbility(AOE_ID)
	
	function castAoe()
		addEffect("war3mapImported\\DarknessMeteor.mdx", pos).destr()
		let tpos = getPos().toVec2()
		doAfter(1., () -> begin
			forUnitsInRange(tpos, 128, (unit u) -> actor.damageTarget(u, 100))
		end)

	ondestroy
		targets.get(owner.getId()).remove(this)

//	function castAOE(Boss root)
//		DestroyEffect(AddSpecialEffect(aoe_spell[root.aoe_id].sfx,pos.x,pos.y ))
//		GroupEnumUnitsInRange(ENUM_GROUP,pos.x, pos.y, aoe_spell[root.aoe_id].aoe, null)
//		for u in ENUM_GROUP
//			var e = u.getEntity()
//			if e instanceof Escaper
//				var es = e castTo Escaper
//				if not es.flying
//					actor.damageTarget(u,aoe_spell[root.aoe_id].damage)
//		GroupClear(ENUM_GROUP)
//	

constant MISSILE_RADIUS = 64.
constant MISSILE_SPEED = 12.

public class BossMissile extends HomingProjectile
	
	construct(vec3 pos, player owner,Entity target)
		super(pos, MISSILE_RADIUS, owner, pos.angleTo2d(vec2(target.pos.x,target.pos.y)), Other.greendragonmissile)
		setTarget(target,HOMING.attract,MISSILE_SPEED)
		setSpeed(14.)
		setTimed(10)
		
	
	override function update()
		super.update()
		for e in escapers
			if pos.distanceToSq(e.pos) < radius*radius
				terminate()
				return
