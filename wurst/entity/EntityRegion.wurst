package EntityRegion
import LinkedList
import Entity


constant real size = 1000
constant int dimensions = 24
constant int halfDimensions = 12

public class EntityRegion
	real minx
	real maxx
	real miny
	real maxy
	LinkedList<Entity> entities = new LinkedList<Entity>()
	
	construct(int x, int y)
		minx = x * size
		maxx = minx + size
		miny = y * size
		maxy = miny + size
	
public function initEntityRegions()
	for i = -halfDimensions to halfDimensions
		for j = -halfDimensions to halfDimensions
			Regions.set(i+halfDimensions, j+halfDimensions, (new EntityRegion(i, j) castTo int) )
			
public function getEntityRegion(real x, real y) returns EntityRegion
	return Regions.get( (x / size).toInt()+halfDimensions, (y / size).toInt()+halfDimensions ) castTo EntityRegion
	
public function getEntityRegion(vec2 pos) returns EntityRegion
	return Regions.get( (pos.x / size).toInt()+halfDimensions, (pos.y / size).toInt()+halfDimensions ) castTo EntityRegion
	
public function getEntityRegion(vec3 pos) returns EntityRegion
	return Regions.get( (pos.x / size).toInt()+halfDimensions, (pos.y / size).toInt()+halfDimensions ) castTo EntityRegion
	

class Regions
	private static int array ar
		
	static function get(int x, int y) returns int
		return ar[x + dimensions * y]
		
	static function set(int x, int y, int data)
		ar[x + dimensions * y] = data
		
function updateEntityRegions()
	var e = Entity.first
	while e != null
		e.currentEntityRegion = getEntityRegion(e.pos)
		e = e.next
	
	
init
	TimerStart(CreateTimer(), 1., true, function updateEntityRegions)

		

	