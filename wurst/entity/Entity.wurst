package Entity
import LinkedListModule
import Terrain
import PhysicsConstants
import Debug
import MapBounds

// Base Entity Class
public abstract class Entity
	use LinkedListModule
	
	// 3d vector position
	vec3 pos
	// 3d vector velocity
	vec3 vel
	
	// owning player
	player owner
	
	// flag for being static
	boolean isStatic 	= false
	// sleeping or active?
	boolean active 		= true
	// for removing
	boolean done 		= false

	construct( vec3 pos, player owner )
		this.pos = pos
		this.vel = vec3(0,0,0)
		this.owner = owner
		entityCount++
		debugPrint("EntityCount: " + entityCount.toString(), 1)
		debugPrint("UnitEntityCount: " + unitEntityCount.toString(), 1)
		
	construct( vec3 pos, vec3 vel, player owner )
		this.pos = pos
		this.vel = vel
		this.owner = owner
		
	function setPos( vec3 pos )
		this.pos = pos
		
	function setVel( vec3 vel )
		this.vel = vel
	
	function addVel( vec3 vel )
		this.vel += vel
		
	function setTarget( vec3 tpos, real speed )
		var t = distanceBetweenCoords(pos.x, pos.y, tpos.x, tpos.y) / speed
		let angl = angleBetweenCoordsR(pos.x, pos.y, tpos.x, tpos.y)
		let e = getTerrainZ(tpos.x,tpos.y)
		
		if t < 1.
			t = 1./speed
		
		let startZVelocity = ((-gravity.z * t) / 2 - pos.z/t + e/t)
		this.setVel( vec3( Cos(angl) * speed, Sin(angl) * speed, startZVelocity) )
		
	function terminate()
		done = true
		
	ondestroy
		entityCount--
		
	// This function is called every ANIMATION_PERIOD tick if the Entity is active
	abstract function update()
	
abstract public class UnitEntity extends Entity
	unit actor
	
	construct( vec3 pos, unit actor )
		super(pos, actor.getOwner())
		this.actor = actor
		actor.setUserData(this castTo int).addAbility(HEIGHT_ENABLER).removeAbility(HEIGHT_ENABLER)
		unitEntityCount++
		
	override function update()
		pos = vec3(actor.getX(), actor.getY(), 0.)
		if not pos.toVec2().inBounds()
			printError("UnitEntity out of Bounds")
			pos = vec3(0,0,0)
			setNewPos(pos)
		
	function setNewActor(unit u)
		actor.remove()
		actor = u
		actor.setUserData(this castTo int)
		
	function setNewPos(vec3 tpos)
		pos = tpos
		actor.setPos(tpos.x,tpos.y)
		
	function setNewXY(vec3 tpos)
		pos = tpos
		actor.setXY(tpos.x,tpos.y)
		
	ondestroy
		unitEntityCount--




	