package GameInit
import EntityManagement
import Startmazes
import PlayerData
import JukeBox
import Encoder
import LZW

init
	callGen()
	startEntityLoop()
	getTimer().start(0.01, () -> initGame())
	
@compiletime function callGen()
	callFunctionsWithAnnotation("@objectgen")

function initGame()
	printTimed("Waiting for players..", 10.)
	initPlayers()
	CinematicFadeBJ(bj_CINEFADETYPE_FADEOUT, 0.00, "ReplaceableTextures\\CameraMasks\\Black_mask.blp", 0, 0, 0, 0)
	CreateFogModifierRect(STAFF_PLAYER, FOG_OF_WAR_VISIBLE, GetPlayableMapRect(), false, false)
	VolumeGroupReset()
	EndThematicMusic()
	GetExpiredTimer().start(0.01, () -> initOne())

function initOne()
	callFunctionsWithAnnotation("@init1")
	GetExpiredTimer().start(0.01, () -> initPartTwo())

function initPartTwo()
	callFunctionsWithAnnotation("@init2")
	GetExpiredTimer().start(0.01, () -> partThree())

function partThree()
	GetExpiredTimer().release()
	initStartmazes()
	checkPlayerLocalFiles()
	jukeBox.playNextMusic()
	// let bs = new BigString()
	// let test = "0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789"
	// bs.addString(test)
	// bs.addString("xy0123456789")
	// print("bigstringlength: " + bs.getLength().toString())
	// print("399: " + bs.getString(399,1))
	// print("400: " + bs.getString(400,1))
	// print("401: " + bs.getString(401,1))
	// compress(bs, (PayloadCallback sq) -> begin
	// 	let compressed = sq.customData castTo BigString
	// 	decompress(compressed, (PayloadCallback sq2) -> begin
	// 		let decompressed = sq2.customData castTo BigString
	// 	end)
	// end)
	// bs.reset()
	// bs.addString("0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 ")
	// bs.addString("0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 ")
	// bs.addString("0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 ")
	// bs.addString("0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 ")
	// bs.addString("1111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 ")
	// bs.addString("0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 ")
	// bs.addString("0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 ")

	// print(bs.getString(500, 5)) // 11111

	// let sc = new Scanner()..addDelimiter(" ")..setInput(bs)
	// int i = 0
	// doSeq(3, (SeqCallback cb) -> begin
	// 	if sc.hasNext()
	// 		sc.next()
	// 		i++
	// 	else
	// 		print("found tokens <" + i.toString() + ">")
	// 		cb.terminate()
	// end) 
	