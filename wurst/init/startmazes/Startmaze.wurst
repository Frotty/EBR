package Startmaze
import public RegionData
import public Teleporter
import public Revivepoint
import public EscaperKillers
import public GameConstants
import Key

public constant vec2 LOUNGE = vec2(-6000,-7000)
public constant boolexpr pickFilter = Condition(() -> GetFilterUnit().getOwner() == STAFF_PLAYER)

public abstract class Startmaze
	boolean inited = false
	RegionData rdata = RegionData.EMPTY_REGION

	abstract function initMaze()

	function isInit() returns boolean
		return inited

	function clearMaze()
		GroupEnumUnitsInRect(ENUM_GROUP, rdata.theRect, Filter(() -> GetFilterUnit().getOwner() == STAFF_PLAYER))
		for vicu from ENUM_GROUP
			if vicu.isAlive() and vicu.getPos().isInRect(rdata.theRect)
				var data = vicu.getEntity()
				if data != null and (data castTo UnitEntity).actor.getName() != null and data.typeId > 0
					data.terminate()
				else
					vicu.remove()
		ENUM_GROUP.clear()

		EnumDestructablesInRectAll(rdata.theRect, function killD)
		EnumItemsInRect(rdata.theRect, null, function deleteKeys)
	
	abstract function getStart() returns vec2
	
public function killD()
	RemoveDestructable(GetEnumDestructable())
	
public function deleteKeys()
	item itm = GetEnumItem()
	if(itm.getEntity() != null) 
		itm.getEntity().terminate()
	else
		itm.remove()		
	
public function correctKeys()
	item itm = GetEnumItem()
	if GetItemTypeId(itm) == 'I009'
		new Key(vec2(GetItemX(itm), GetItemY(itm)), STAFF_PLAYER)
		itm.remove()
	else if GetItemTypeId(itm) == 'I00J'
		let k = new Key(vec2(GetItemX(itm), GetItemY(itm)), STAFF_PLAYER)
		k.col = COLOR.PURPLE
		k.recolor()
		itm.remove()
	else if GetItemTypeId(itm) == 'I008'
		let k = new Key(vec2(GetItemX(itm), GetItemY(itm)), STAFF_PLAYER)
		k.col = COLOR.TEAL
		k.recolor()
		itm.remove()
		