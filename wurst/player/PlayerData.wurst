package PlayerData
import MultiboardClass
import public Escaper
import public BuilderConstants
import public GameConstants
import Builder
import PickSystem
import initlater TerrainModder
import UnitProducer
import RevivePointModifier
import ClosureTimers
import CodeManager
import Playerfile
import PlayerMemoryData

trigger leaveTrig

public Board playerboard
public PlayerData array pData
public LinkedList<PlayerData> allPlayers = new LinkedList<PlayerData>()
public LinkedList<PlayerData> escaperPlayers = new LinkedList<PlayerData>()
public LinkedList<PlayerData> builderPlayers = new LinkedList<PlayerData>()

public enum ROLE
	USER
	MOD
	CREATOR

public class PlayerData
	int id
	string hash
	player p
	string name
	string mbname
	string rank = "Newbie"
	string icon = "ReplaceableTextures\\CommandButtons\\BTNSelectHeroOn.blp"
	boolean admin = false
	boolean checked = false
	Escaper escaper
	Builder builder
	RevivePointModifier revmod

	int XP = 40
	effect lvlfx = null
	effect tagfx = null

	boolean picked = false
	boolean localFilesEnabled = false
	boolean localFilesChecked = false
	int lastExpGain = 0
	int lastSave = -1
	real zCam = 1600.
	
	TerrainModder tmod 
	UnitProducer prod

	Playerfile pfile = null
	PMData pmdata = null
	Selector selector = null
	
	construct (player p)
		this.p = p
		id = GetPlayerId(p)
		pData[id] = this
		name = GetPlayerName(p)
		hash = name.getHash().toString()
		mbname = name
		if mbname == "Frotty"
			admin = true
		int i = 0
		while names[i] != null
			if mbname.toLowerCase() == names[i].toLowerCase()
				mbname = tags[i] + "|r" + p.getNameColored()
			i++
		mbname = p.getNameColored()
		allPlayers.add(this)
		if id > 7
			builderPlayers.add(this)
		else
			escaperPlayers.add(this)

	function setMBRow(int row)
		playerboard.setNewItem(row,0,mbname,icon)
		playerboard.setNewItem(row,1,escaper.deaths.toString(), null)
		playerboard.setNewItem(row,2,rank, null)  
	
	function addXp(int amount, boolean time)
		if localFilesEnabled and allPlayers.getSize() > 0
			if time
				XP += amount
			else if lastExpGain < minutes
				lastExpGain = minutes
				printLog(Loglevel.DEBUG, "add current xp:" + XP.toString())
				XP += amount
				printLog(Loglevel.DEBUG, "add new xp:" + XP.toString())
			updateRank()
	
	function setXp(int amount)
		printLog(Loglevel.DEBUG, "set current xp:" + XP.toString())
		XP = amount
		updateRank()
		printLog(Loglevel.DEBUG, "set new xp:" + XP.toString())
	
	function updateRank()
		int i = 0
		if admin
			rank = "|cffADD642*Admin*"
			if tagfx == null
				tagfx = AddSpecialEffectTarget( "war3mapImported\\HolyShield Seal_Portrait.mdx", escaper.actor, "chest" )
		if lvlfx != null
			lvlfx.destr()
		while XP >= expBounds[i]
			i++
		rank = ranks[i]
		if XP > 10000
			lvlfx = AddSpecialEffectTarget( "war3mapImported\\Life High_Portrait.mdx", escaper.actor, "chest" )
		else if XP > 7500
			lvlfx = AddSpecialEffectTarget( "war3mapImported\\Life High.mdx", escaper.actor, "chest" )
		else if XP > 4000
			lvlfx = AddSpecialEffectTarget( "war3mapImported\\Life Low_Portrait.mdx", escaper.actor, "chest" )
		else if XP > 1000
			lvlfx = AddSpecialEffectTarget( "war3mapImported\\Life Low.mdx", escaper.actor, "chest" )

		if XP > 400 and UnitHasItemOfTypeBJ(escaper.actor, 'I002')
			printTimedToPlayer("You have unlocked the |cffFFCC00jukebox|r!", 25, p)
			UnitAddItemById(escaper.actor,'I002')
		
		

		if lastSave+20 < minutes*60+seconds and pfile != null and pmdata != null
			lastSave = minutes*60+seconds
			printLog(Loglevel.DEBUG, "Playerfile saving")
			savePlayerfile(this)

		
		
	ondestroy
		DisplayTimedTextToPlayer(GetLocalPlayer(), 0, 0, 20., p.getNameColored() + "|r |cffFFCC33has left the game!") 
		PlaySoundBJ(gg_snd_QuestFailed)
		if selector != null
			destroy selector
		if escaper != null
			if escaper.alive
				escaper.terminate()
			else
				escaper.left = true
			escaper = null
		
		// Give remaining builders control
		if builderPlayers.getSize() > 1 and isBuilder(p)
			if builder != null
				builder.terminate()
			for int i=0 to 22
				if regions[i].getPermission(this.p) == Permission.OWNER
					for j = 8 to 11
						regions[i].allow(players[j])
			GroupEnumUnitsOfPlayer(ENUM_GROUP, p, Filter(() -> GetFilterUnit().getTypeId() == 'n00A'))
			for setup from ENUM_GROUP
				setup.setOwner(builderPlayers.pop().p, true)
		
		allPlayers.remove(this)
		if isBuilder(p)
			builderPlayers.remove(this)
		else
			escaperPlayers.remove(this)
		
		if not localFilesChecked
			onPlayerSynced()
		
		pData[id] = null
		rebuildBoard()
		if revmod != null
			destroy revmod
		if tagfx != null
			tagfx.destr()
		
function rebuildBoard()
	playerboard = new Board(allPlayers.getSize()+1,3)
	
	int i = 1
	for pd in allPlayers
		playerboard.board.getItem(i,0)..setStyle(true,true)..setWidth(0.1)
		playerboard.board.getItem(i,1)..setStyle(true,false)..setWidth(0.015)
		playerboard.board.getItem(i,2)..setStyle(true,false)..setWidth(0.05)
		pd.setMBRow(i)
		i++

	CameraSetSmoothingFactor(10.)
	playerboard.board.getItem(0,0)..setStyle(true,false)..setWidth(0.1)
	playerboard.setNewItem(0,0,"Player",null)
	playerboard.board.getItem(0,1)..setStyle(false,true)..setWidth(0.02)
	playerboard.setNewItem(0,1,null,"ReplaceableTextures\\CommandButtons\\BTNAnkh.blp")
	playerboard.board.getItem(0,2)..setWidth(0.05)..setStyle(true,false)
	playerboard.setNewItem(0,2,"Rank",null)
	playerboard.board.display(true)

	allow()
	
	
function setTime()
	seconds++
	string secs = "|cffffffff"
	string mins = "|cffffffff"
	if seconds < 10
		secs += "0" + seconds.toString()
	else
		secs += seconds.toString()
		
	if minutes < 10
		mins += "0" + minutes.toString()
	else
		mins += minutes.toString()
		
	secs += "|r"
	mins += "|r"
	
	playerboard.board.setTitle( MAP_VER + " [ " + mins + " : " + secs +" ]")
	
	if seconds >= 60
		seconds = 0
		minutes++
		if minutes % 5 == 0
			for pd in allPlayers
				pd.addXp(10, true)

	int i = 1
	for pd in allPlayers
		pd.setMBRow(i)
		i++
			 
function playerLeft()
	var p = GetTriggerPlayer()
	var pd = pData[p.getId()]
	destroy pd

@init1 function initPlayers()
	leaveTrig = CreateTrigger()
	leaveTrig.addAction(function playerLeft)
	for i = 0 to 11
		if GetPlayerSlotState(players[i]) == PLAYER_SLOT_STATE_PLAYING and GetPlayerController(players[i]) == MAP_CONTROL_USER
			pData[i] = new PlayerData(players[i])
			leaveTrig.registerPlayerEvent(players[i], EVENT_PLAYER_LEAVE)

	TimerStart(CreateTimer(), .1, false, () -> rebuildBoard())
	TimerStart(CreateTimer(), 1., true, function setTime)
	
	for pd in builderPlayers
		new TerrainModder(CreateUnit(pd.p, WALKABLE, hiddenX, hiddenY, 0 ) )
		new TerrainModder(CreateUnit(pd.p, UNWALKABLE, hiddenX, hiddenY, 0 ) )
		new TerrainModder(CreateUnit(pd.p, ICECONTROL, hiddenX, hiddenY, 0 ) )
		new TerrainModder(CreateUnit(pd.p, ICEUNCONTROL, hiddenX, hiddenY, 0 ) )
		pd.builder = new Builder( pd.p )
		UnitAddItemById(pd.builder.actor,'I001')
		UnitAddItemById(pd.builder.actor,'I002')
		UnitAddItemById(pd.builder.actor,'I003')
		pd.builder.regionCount = (17. / builderPlayers.getSize()).round()

	if allPlayers.getSize() == 1 and builderPlayers.getSize() == 0
		let pd = allPlayers.get(0)
		new TerrainModder(CreateUnit(pd.p, WALKABLE, hiddenX, hiddenY, 0 ) )
		new TerrainModder(CreateUnit(pd.p, UNWALKABLE, hiddenX, hiddenY, 0 ) )
		new TerrainModder(CreateUnit(pd.p, ICECONTROL, hiddenX, hiddenY, 0 ) )
		new TerrainModder(CreateUnit(pd.p, ICEUNCONTROL, hiddenX, hiddenY, 0 ) )
		pd.builder = new Builder( pd.p )
		UnitAddItemById(pd.builder.actor,'I001')
		UnitAddItemById(pd.builder.actor,'I002')
		UnitAddItemById(pd.builder.actor,'I003')
		pd.builder.regionCount = 17
		pd.escaper.actor.addAbility('A001')
		builderPlayers.add(pd)
		CreateFogModifierRectBJ( true, pd.p, FOG_OF_WAR_VISIBLE, GetPlayableMapRect() )
		printTimed("|cff949494SinglePlayer |cffFFCC00test mode |cff949494enabled!", 45)

public function checkPlayerLocalFiles()
	doAfter(0.1, () -> begin
		doSequentialSync()
	end)

public int minutes = 0
public int seconds = 0

