package CodeManager
import initlater  PlayerData
import CodeGenerator
import LocalFiles
import MultifileIO
import SyncWrapper
import PlayerMemoryData
import Playerfile
import initlater PickSystem
import GuardedWorker
import BufferAdapters

constant XPMAX = 500000
constant FILE_NAME = "ebrprofile.pld"
public constant MSG_PREFIX = "|cffDE7B19Save/Load|r :"
constant MEH = "*/#-\\"
constant saveTechnique = 331

public function checkLocalFiles()
	for pd in allPlayers
		pd.localFilesEnabled = LocalFiles.isEnabled(pd.p)
		if pd.localFilesEnabled
			printTimedToPlayer("You have |cffFFCC00local files enabled|r and will be able to save data!", 25, pd.p)
		else
			printTimedToPlayer("You have |cffDE5A21local files disabled|r. You need to enabale it in order to save stuff!", 15, pd.p)

	startChoose()


/** Load and sync playerfile */
public function checkPlayerfile(PlayerData pd)
	printLog(Loglevel.DEBUG, "check playerfile")
	if pd.localFilesEnabled
		getSyncedFile(pd, FILE_NAME, Filter(() -> onFileSynced()))

function onFileSynced()
	let syncTask = getSyncFileTask()
	if syncTask.state == TaskState.FINISHED
		let syncedFile = syncTask.file
		let token = syncedFile.read()
		printLog(Loglevel.DEBUG, "on PFCodeManager 2 <" + token + ">")
		if token == null or token.length() == 0
			if not syncTask.filename.startsWith("Logs\\")
				execute(() -> getSyncedFile(syncTask.pd, "Logs\\" + FILE_NAME, Filter(() -> onFileSynced())))
				return
			printTimed("Creating new |cffFFCC00valid savefile.|r", 25)
			// A new file was created
			printLog(Loglevel.DEBUG, "New Playerfile1")
			createNewPlayerfile(syncTask.pd)
			printLog(Loglevel.DEBUG, "New Playerfile2")
			checkPlayerfile(syncTask.pd)
			printLog(Loglevel.DEBUG, "New Playerfile3")
		else if Playerfile.verify(token)
			printTimedToPlayer("Found a |cffFFCC00valid savefile.|r", 25, syncTask.pd.p)
			let pf = new Playerfile()
			pf.load(syncedFile)
			syncTask.pd.pfile = pf
			for pmd in pf.pmDatas
				printLog(Loglevel.DEBUG, "pdchash: " + syncTask.pd.hash + " loaded hash: " + pmd.namehash )
				if pmd.namehash == syncTask.pd.hash
					printTimedToPlayer("Found a profile for |cffFFCC00" + syncTask.pd.name + "|r", 25, syncTask.pd.p)
					loadPlayerMemory(syncTask.pd, pmd)
					return

		// Savedata exists, but no profile for that name
		printTimedToPlayer("Didn't find a profile for |cffFFCC00" + syncTask.pd.name + "|r - creating new..", 25, syncTask.pd.p)
		addPlayerProfile(syncTask.pd)
		loadPlayerMemory(syncTask.pd, syncTask.pd.pmdata)
	

function loadPlayerMemory(PlayerData pd, PMData pmd)
	var scode = new Savecode()
	if scode.load(pd.name, pmd.expcode, saveTechnique)
		printLog(Loglevel.DEBUG, "load success")
		let xp = scode.decode(XPMAX)
		DisplayTextToPlayer(pd.p,0,0,MSG_PREFIX + "|cff73CE4A[Success]|r - Your Character has been loaded. (" + xp.toString() + ")" )
		pd.pmdata = pmd
		pd.validateAdmintoken()
		pd.setXp(xp)
	else
		printLog(Loglevel.ERROR, "load failed! your savefile is outdated or broken.")
	destroy scode

function addPlayerProfile(PlayerData pd)
	printLog(Loglevel.DEBUG, "addPlayerProfile1")
	let pmdata = new PMData()
	var scode = new Savecode()
	scode.encode(pd.XP, XPMAX)
	pmdata.namehash = pd.hash
	pmdata.setXP(scode.save(pd.name, saveTechnique))
	pmdata.adminToken = "no"
	pd.pmdata = pmdata
	destroy scode

	pd.pfile.pmDatas.add(pmdata)
	printLog(Loglevel.DEBUG, "addPlayerProfile2")
	savePlayerfile(pd)
	printTimedToPlayer("|cffFFCC00Profile|r created!", 25, pd.p)


let fk = "0000"
public var buffer = ""

function fkGen(int number) returns string
	return fk.substring(0, 4-number.toString().length()) + number.toString()

public function addToBuff(string add)
	buffer += fkGen(add.length()) + add

public function savePlayerfile(PlayerData pd)
	var scode = new Savecode()
	scode.encode(pd.XP, XPMAX)
	pd.pmdata.setXP(scode.save(pd.name, saveTechnique))
	destroy scode
	if localPlayer == pd.p
		let writer = new FileWriter(FILE_NAME, false, 0.01)
		buffer = ""
		pd.pfile.save()
		Log.debug("writeLine: " + buffer)
		writer.writeLine(buffer)
		writer.save(() -> skip)
	
function createNewPlayerfile(PlayerData pd)
	printLog(Loglevel.DEBUG, "createNewPlayerfile0")
	pd.pfile = new Playerfile()
	printLog(Loglevel.DEBUG, "createNewPlayerfile1")
	addPlayerProfile(pd)
	printLog(Loglevel.DEBUG, "createNewPlayerfile2")
	destroy pd.pfile
	printLog(Loglevel.DEBUG, "createNewPlayerfile3")
	pd.pfile = null
	printLog(Loglevel.DEBUG, "createNewPlayerfile4")
	pd.pmdata = null
